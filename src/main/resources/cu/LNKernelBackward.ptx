//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_52
.address_size 64

	// .globl	LayerNorm1FusedBackpropGPUKernel
.extern .shared .align 16 .b8 my_smem[];

.visible .entry LayerNorm1FusedBackpropGPUKernel(
	.param .u32 LayerNorm1FusedBackpropGPUKernel_param_0,
	.param .u32 LayerNorm1FusedBackpropGPUKernel_param_1,
	.param .f32 LayerNorm1FusedBackpropGPUKernel_param_2,
	.param .u64 LayerNorm1FusedBackpropGPUKernel_param_3,
	.param .u64 LayerNorm1FusedBackpropGPUKernel_param_4,
	.param .u64 LayerNorm1FusedBackpropGPUKernel_param_5,
	.param .u64 LayerNorm1FusedBackpropGPUKernel_param_6,
	.param .u64 LayerNorm1FusedBackpropGPUKernel_param_7,
	.param .u64 LayerNorm1FusedBackpropGPUKernel_param_8,
	.param .u32 LayerNorm1FusedBackpropGPUKernel_param_9
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<121>;
	.reg .b32 	%r<66>;
	.reg .b64 	%rd<26>;


	ld.param.u32 	%r6, [LayerNorm1FusedBackpropGPUKernel_param_0];
	ld.param.u32 	%r7, [LayerNorm1FusedBackpropGPUKernel_param_1];
	ld.param.f32 	%f25, [LayerNorm1FusedBackpropGPUKernel_param_2];
	ld.param.u64 	%rd7, [LayerNorm1FusedBackpropGPUKernel_param_3];
	ld.param.u64 	%rd8, [LayerNorm1FusedBackpropGPUKernel_param_4];
	ld.param.u64 	%rd12, [LayerNorm1FusedBackpropGPUKernel_param_5];
	ld.param.u64 	%rd9, [LayerNorm1FusedBackpropGPUKernel_param_6];
	ld.param.u64 	%rd10, [LayerNorm1FusedBackpropGPUKernel_param_7];
	ld.param.u64 	%rd11, [LayerNorm1FusedBackpropGPUKernel_param_8];
	ld.param.u32 	%r8, [LayerNorm1FusedBackpropGPUKernel_param_9];
	mov.u32 	%r9, WARP_SZ;
	mov.u32 	%r10, %tid.x;
	rem.u32 	%r1, %r10, %r9;
	cvt.rn.f32.s32 	%f27, %r6;
	rcp.rn.f32 	%f1, %f27;
	cvt.u64.u32 	%rd1, %r10;
	mul.wide.u32 	%rd13, %r10, 4;
	add.s64 	%rd2, %rd12, %rd13;
	setp.ge.s32 	%p1, %r10, %r6;
	mov.f32 	%f118, 0f00000000;
	mov.f32 	%f111, %f118;
	@%p1 bra 	$L__BB0_2;

	// begin inline asm
	ld.global.nc.f32 %f111, [%rd2];
	// end inline asm

$L__BB0_2:
	mov.u32 	%r65, %ctaid.x;
	setp.ge.s32 	%p2, %r65, %r8;
	mov.f32 	%f120, %f118;
	@%p2 bra 	$L__BB0_21;

	mov.u32 	%r3, %nctaid.x;
	cvta.to.global.u64 	%rd3, %rd9;
	cvt.u32.u64 	%r11, %rd1;
	setp.ne.s32 	%p3, %r11, 0;
	setp.ne.s32 	%p6, %r1, 0;
	mov.f32 	%f120, %f118;

$L__BB0_4:
	@%p3 bra 	$L__BB0_6;

	mov.f32 	%f33, 0f00000000;
	st.shared.v4.f32 	[my_smem], {%f33, %f33, %f33, %f33};

$L__BB0_6:
	setp.ge.s32 	%p4, %r11, %r6;
	bar.sync 	0;
	mad.lo.s32 	%r13, %r65, %r6, %r11;
	cvt.s64.s32 	%rd4, %r13;
	mul.wide.s32 	%rd15, %r13, 4;
	add.s64 	%rd5, %rd7, %rd15;
	mov.f32 	%f115, 0f00000000;
	mov.f32 	%f114, %f115;
	@%p4 bra 	$L__BB0_8;

	// begin inline asm
	ld.global.nc.f32 %f114, [%rd5];
	// end inline asm

$L__BB0_8:
	shl.b64 	%rd17, %rd4, 2;
	add.s64 	%rd6, %rd8, %rd17;
	@%p4 bra 	$L__BB0_10;

	// begin inline asm
	ld.global.nc.f32 %f115, [%rd6];
	// end inline asm

$L__BB0_10:
	add.f32 	%f120, %f115, %f120;
	fma.rn.f32 	%f39, %f1, %f114, 0f00000000;
	mul.f32 	%f11, %f111, %f115;
	fma.rn.f32 	%f49, %f1, %f11, 0f00000000;
	mov.u32 	%r25, 16;
	mov.u32 	%r34, 31;
	// begin inline asm
	shfl.bfly.b32 %f38, %f39, %r25, %r34;
	// end inline asm
	add.f32 	%f41, %f39, %f38;
	mov.u32 	%r27, 8;
	// begin inline asm
	shfl.bfly.b32 %f40, %f41, %r27, %r34;
	// end inline asm
	add.f32 	%f43, %f41, %f40;
	mov.u32 	%r29, 4;
	// begin inline asm
	shfl.bfly.b32 %f42, %f43, %r29, %r34;
	// end inline asm
	add.f32 	%f45, %f43, %f42;
	mov.u32 	%r31, 2;
	// begin inline asm
	shfl.bfly.b32 %f44, %f45, %r31, %r34;
	// end inline asm
	add.f32 	%f47, %f45, %f44;
	mov.u32 	%r33, 1;
	// begin inline asm
	shfl.bfly.b32 %f46, %f47, %r33, %r34;
	// end inline asm
	add.f32 	%f12, %f47, %f46;
	// begin inline asm
	shfl.bfly.b32 %f48, %f49, %r25, %r34;
	// end inline asm
	add.f32 	%f51, %f49, %f48;
	// begin inline asm
	shfl.bfly.b32 %f50, %f51, %r27, %r34;
	// end inline asm
	add.f32 	%f53, %f51, %f50;
	// begin inline asm
	shfl.bfly.b32 %f52, %f53, %r29, %r34;
	// end inline asm
	add.f32 	%f55, %f53, %f52;
	// begin inline asm
	shfl.bfly.b32 %f54, %f55, %r31, %r34;
	// end inline asm
	add.f32 	%f57, %f55, %f54;
	// begin inline asm
	shfl.bfly.b32 %f56, %f57, %r33, %r34;
	// end inline asm
	add.f32 	%f13, %f57, %f56;
	@%p6 bra 	$L__BB0_12;

	mov.u32 	%r35, my_smem;
	atom.shared.add.f32 	%f58, [%r35], %f12;
	add.s32 	%r36, %r35, 8;
	atom.shared.add.f32 	%f59, [%r36], %f13;

$L__BB0_12:
	setp.ge.u32 	%p7, %r11, %r6;
	bar.sync 	0;
	mov.f32 	%f116, 0f00000000;
	ld.shared.f32 	%f14, [my_smem];
	mov.f32 	%f117, %f116;
	@%p7 bra 	$L__BB0_14;

	sub.f32 	%f62, %f114, %f14;
	fma.rn.f32 	%f116, %f62, %f62, 0f00000000;
	mul.f32 	%f63, %f115, %f62;
	fma.rn.f32 	%f117, %f111, %f63, 0f00000000;

$L__BB0_14:
	// begin inline asm
	shfl.bfly.b32 %f64, %f116, %r25, %r34;
	// end inline asm
	add.f32 	%f67, %f116, %f64;
	// begin inline asm
	shfl.bfly.b32 %f66, %f67, %r27, %r34;
	// end inline asm
	add.f32 	%f69, %f67, %f66;
	// begin inline asm
	shfl.bfly.b32 %f68, %f69, %r29, %r34;
	// end inline asm
	add.f32 	%f71, %f69, %f68;
	// begin inline asm
	shfl.bfly.b32 %f70, %f71, %r31, %r34;
	// end inline asm
	add.f32 	%f73, %f71, %f70;
	// begin inline asm
	shfl.bfly.b32 %f72, %f73, %r33, %r34;
	// end inline asm
	add.f32 	%f19, %f73, %f72;
	// begin inline asm
	shfl.bfly.b32 %f74, %f117, %r25, %r34;
	// end inline asm
	add.f32 	%f77, %f117, %f74;
	// begin inline asm
	shfl.bfly.b32 %f76, %f77, %r27, %r34;
	// end inline asm
	add.f32 	%f79, %f77, %f76;
	// begin inline asm
	shfl.bfly.b32 %f78, %f79, %r29, %r34;
	// end inline asm
	add.f32 	%f81, %f79, %f78;
	// begin inline asm
	shfl.bfly.b32 %f80, %f81, %r31, %r34;
	// end inline asm
	add.f32 	%f83, %f81, %f80;
	// begin inline asm
	shfl.bfly.b32 %f82, %f83, %r33, %r34;
	// end inline asm
	add.f32 	%f20, %f83, %f82;
	@%p6 bra 	$L__BB0_16;

	mov.u32 	%r58, my_smem;
	add.s32 	%r59, %r58, 4;
	atom.shared.add.f32 	%f84, [%r59], %f19;
	add.s32 	%r60, %r58, 12;
	atom.shared.add.f32 	%f85, [%r60], %f20;

$L__BB0_16:
	bar.sync 	0;
	@%p3 bra 	$L__BB0_18;

	ld.shared.f32 	%f86, [my_smem+4];
	fma.rn.f32 	%f87, %f1, %f86, %f25;
	rsqrt.approx.f32 	%f88, %f87;
	st.shared.f32 	[my_smem+4], %f88;
	ld.shared.v2.f32 	{%f89, %f90}, [my_smem+8];
	mul.f32 	%f93, %f88, %f89;
	st.shared.f32 	[my_smem+8], %f93;
	mul.f32 	%f94, %f88, %f90;
	mul.f32 	%f95, %f88, %f94;
	mul.f32 	%f96, %f88, %f95;
	mul.f32 	%f97, %f1, %f96;
	st.shared.f32 	[my_smem+12], %f97;

$L__BB0_18:
	bar.sync 	0;
	cvt.u32.u64 	%r63, %rd4;
	setp.ge.s32 	%p11, %r63, %r7;
	or.pred  	%p12, %p7, %p11;
	@%p12 bra 	$L__BB0_20;

	ld.shared.f32 	%f98, [my_smem+4];
	ld.shared.v2.f32 	{%f99, %f100}, [my_smem+8];
	sub.f32 	%f103, %f114, %f14;
	mul.f32 	%f104, %f115, %f103;
	fma.rn.f32 	%f118, %f104, %f98, %f118;
	mul.f32 	%f105, %f103, %f100;
	mul.f32 	%f106, %f11, %f98;
	sub.f32 	%f107, %f106, %f105;
	sub.f32 	%f108, %f107, %f99;
	add.s64 	%rd20, %rd3, %rd17;
	st.global.f32 	[%rd20], %f108;

$L__BB0_20:
	bar.sync 	0;
	add.s32 	%r65, %r65, %r3;
	setp.lt.s32 	%p13, %r65, %r8;
	@%p13 bra 	$L__BB0_4;

$L__BB0_21:
	cvt.u32.u64 	%r64, %rd1;
	setp.ge.u32 	%p14, %r64, %r6;
	@%p14 bra 	$L__BB0_23;

	cvta.to.global.u64 	%rd21, %rd10;
	shl.b64 	%rd22, %rd1, 2;
	add.s64 	%rd23, %rd21, %rd22;
	atom.global.add.f32 	%f109, [%rd23], %f118;
	cvta.to.global.u64 	%rd24, %rd11;
	add.s64 	%rd25, %rd24, %rd22;
	atom.global.add.f32 	%f110, [%rd25], %f120;

$L__BB0_23:
	ret;

}
	// .globl	LayerNorm2FusedBackpropGPUKernel
.visible .entry LayerNorm2FusedBackpropGPUKernel(
	.param .u32 LayerNorm2FusedBackpropGPUKernel_param_0,
	.param .u32 LayerNorm2FusedBackpropGPUKernel_param_1,
	.param .f32 LayerNorm2FusedBackpropGPUKernel_param_2,
	.param .u64 LayerNorm2FusedBackpropGPUKernel_param_3,
	.param .u64 LayerNorm2FusedBackpropGPUKernel_param_4,
	.param .u64 LayerNorm2FusedBackpropGPUKernel_param_5,
	.param .u64 LayerNorm2FusedBackpropGPUKernel_param_6,
	.param .u64 LayerNorm2FusedBackpropGPUKernel_param_7,
	.param .u64 LayerNorm2FusedBackpropGPUKernel_param_8,
	.param .u32 LayerNorm2FusedBackpropGPUKernel_param_9
)
{
	.reg .pred 	%p<23>;
	.reg .f32 	%f<174>;
	.reg .b32 	%r<81>;
	.reg .b64 	%rd<48>;


	ld.param.u32 	%r9, [LayerNorm2FusedBackpropGPUKernel_param_0];
	ld.param.u32 	%r10, [LayerNorm2FusedBackpropGPUKernel_param_1];
	ld.param.u64 	%rd15, [LayerNorm2FusedBackpropGPUKernel_param_3];
	ld.param.u64 	%rd16, [LayerNorm2FusedBackpropGPUKernel_param_4];
	ld.param.u64 	%rd17, [LayerNorm2FusedBackpropGPUKernel_param_5];
	ld.param.u64 	%rd18, [LayerNorm2FusedBackpropGPUKernel_param_6];
	ld.param.u64 	%rd19, [LayerNorm2FusedBackpropGPUKernel_param_7];
	ld.param.u32 	%r11, [LayerNorm2FusedBackpropGPUKernel_param_9];
	cvta.to.global.u64 	%rd1, %rd18;
	cvta.to.global.u64 	%rd3, %rd19;
	mov.u32 	%r12, WARP_SZ;
	mov.u32 	%r13, %tid.x;
	rem.u32 	%r1, %r13, %r12;
	cvt.rn.f32.s32 	%f48, %r9;
	rcp.rn.f32 	%f1, %f48;
	cvt.u64.u32 	%rd4, %r13;
	mov.u32 	%r2, %ntid.x;
	mul.wide.u32 	%rd21, %r13, 4;
	add.s64 	%rd5, %rd17, %rd21;
	setp.ge.s32 	%p1, %r13, %r9;
	mov.f32 	%f170, 0f00000000;
	mov.f32 	%f154, %f170;
	@%p1 bra 	$L__BB1_2;

	// begin inline asm
	ld.global.nc.f32 %f154, [%rd5];
	// end inline asm

$L__BB1_2:
	mul.wide.u32 	%rd23, %r2, 4;
	add.s64 	%rd7, %rd5, %rd23;
	cvt.u32.u64 	%r14, %rd4;
	add.s32 	%r3, %r2, %r14;
	setp.ge.s32 	%p2, %r3, %r9;
	mov.f32 	%f155, %f170;
	@%p2 bra 	$L__BB1_4;

	// begin inline asm
	ld.global.nc.f32 %f155, [%rd7];
	// end inline asm

$L__BB1_4:
	mov.u32 	%r80, %ctaid.x;
	setp.ge.s32 	%p3, %r80, %r11;
	mov.f32 	%f171, %f170;
	mov.f32 	%f168, %f170;
	mov.f32 	%f169, %f170;
	@%p3 bra 	$L__BB1_31;

	setp.ne.s32 	%p4, %r14, 0;
	setp.ne.s32 	%p9, %r1, 0;
	setp.ge.u32 	%p11, %r3, %r9;
	mov.f32 	%f171, %f170;
	mov.f32 	%f168, %f170;
	mov.f32 	%f169, %f170;

$L__BB1_6:
	@%p4 bra 	$L__BB1_8;

	mov.f32 	%f60, 0f00000000;
	st.shared.v4.f32 	[my_smem], {%f60, %f60, %f60, %f60};

$L__BB1_8:
	mov.u32 	%r79, %ntid.x;
	setp.ge.s32 	%p5, %r14, %r9;
	bar.sync 	0;
	mad.lo.s32 	%r17, %r80, %r9, %r14;
	add.s32 	%r7, %r17, %r79;
	cvt.s64.s32 	%rd8, %r17;
	mul.wide.s32 	%rd25, %r17, 4;
	add.s64 	%rd9, %rd15, %rd25;
	mov.f32 	%f163, 0f00000000;
	mov.f32 	%f160, %f163;
	@%p5 bra 	$L__BB1_10;

	// begin inline asm
	ld.global.nc.f32 %f160, [%rd9];
	// end inline asm

$L__BB1_10:
	shl.b64 	%rd27, %rd8, 2;
	add.s64 	%rd10, %rd16, %rd27;
	mov.f32 	%f161, %f163;
	@%p5 bra 	$L__BB1_12;

	// begin inline asm
	ld.global.nc.f32 %f161, [%rd10];
	// end inline asm

$L__BB1_12:
	cvt.s64.s32 	%rd11, %r7;
	mul.wide.s32 	%rd29, %r7, 4;
	add.s64 	%rd12, %rd15, %rd29;
	mov.f32 	%f162, %f163;
	@%p2 bra 	$L__BB1_14;

	// begin inline asm
	ld.global.nc.f32 %f162, [%rd12];
	// end inline asm

$L__BB1_14:
	shl.b64 	%rd31, %rd11, 2;
	add.s64 	%rd13, %rd16, %rd31;
	@%p2 bra 	$L__BB1_16;

	// begin inline asm
	ld.global.nc.f32 %f163, [%rd13];
	// end inline asm

$L__BB1_16:
	add.f32 	%f171, %f161, %f171;
	fma.rn.f32 	%f89, %f1, %f160, 0f00000000;
	mul.f32 	%f19, %f161, %f154;
	fma.rn.f32 	%f90, %f1, %f19, 0f00000000;
	add.f32 	%f170, %f163, %f170;
	fma.rn.f32 	%f70, %f1, %f162, %f89;
	mul.f32 	%f21, %f163, %f155;
	fma.rn.f32 	%f80, %f1, %f21, %f90;
	mov.u32 	%r29, 16;
	mov.u32 	%r38, 31;
	// begin inline asm
	shfl.bfly.b32 %f69, %f70, %r29, %r38;
	// end inline asm
	add.f32 	%f72, %f70, %f69;
	mov.u32 	%r31, 8;
	// begin inline asm
	shfl.bfly.b32 %f71, %f72, %r31, %r38;
	// end inline asm
	add.f32 	%f74, %f72, %f71;
	mov.u32 	%r33, 4;
	// begin inline asm
	shfl.bfly.b32 %f73, %f74, %r33, %r38;
	// end inline asm
	add.f32 	%f76, %f74, %f73;
	mov.u32 	%r35, 2;
	// begin inline asm
	shfl.bfly.b32 %f75, %f76, %r35, %r38;
	// end inline asm
	add.f32 	%f78, %f76, %f75;
	mov.u32 	%r37, 1;
	// begin inline asm
	shfl.bfly.b32 %f77, %f78, %r37, %r38;
	// end inline asm
	add.f32 	%f22, %f78, %f77;
	// begin inline asm
	shfl.bfly.b32 %f79, %f80, %r29, %r38;
	// end inline asm
	add.f32 	%f82, %f80, %f79;
	// begin inline asm
	shfl.bfly.b32 %f81, %f82, %r31, %r38;
	// end inline asm
	add.f32 	%f84, %f82, %f81;
	// begin inline asm
	shfl.bfly.b32 %f83, %f84, %r33, %r38;
	// end inline asm
	add.f32 	%f86, %f84, %f83;
	// begin inline asm
	shfl.bfly.b32 %f85, %f86, %r35, %r38;
	// end inline asm
	add.f32 	%f88, %f86, %f85;
	// begin inline asm
	shfl.bfly.b32 %f87, %f88, %r37, %r38;
	// end inline asm
	add.f32 	%f23, %f88, %f87;
	@%p9 bra 	$L__BB1_18;

	mov.u32 	%r39, my_smem;
	atom.shared.add.f32 	%f91, [%r39], %f22;
	add.s32 	%r40, %r39, 8;
	atom.shared.add.f32 	%f92, [%r40], %f23;

$L__BB1_18:
	setp.ge.u32 	%p10, %r14, %r9;
	bar.sync 	0;
	mov.f32 	%f166, 0f00000000;
	ld.shared.f32 	%f24, [my_smem];
	mov.f32 	%f167, %f166;
	@%p10 bra 	$L__BB1_20;

	sub.f32 	%f95, %f160, %f24;
	fma.rn.f32 	%f166, %f95, %f95, 0f00000000;
	mul.f32 	%f96, %f95, %f161;
	fma.rn.f32 	%f167, %f96, %f154, 0f00000000;

$L__BB1_20:
	@%p11 bra 	$L__BB1_22;

	sub.f32 	%f97, %f162, %f24;
	fma.rn.f32 	%f166, %f97, %f97, %f166;
	mul.f32 	%f98, %f97, %f163;
	fma.rn.f32 	%f167, %f98, %f155, %f167;

$L__BB1_22:
	mov.u32 	%r74, 1;
	mov.u32 	%r73, 2;
	mov.u32 	%r72, 4;
	mov.u32 	%r71, 8;
	mov.u32 	%r70, 31;
	mov.u32 	%r69, 16;
	// begin inline asm
	shfl.bfly.b32 %f99, %f166, %r69, %r70;
	// end inline asm
	add.f32 	%f102, %f166, %f99;
	// begin inline asm
	shfl.bfly.b32 %f101, %f102, %r71, %r70;
	// end inline asm
	add.f32 	%f104, %f102, %f101;
	// begin inline asm
	shfl.bfly.b32 %f103, %f104, %r72, %r70;
	// end inline asm
	add.f32 	%f106, %f104, %f103;
	// begin inline asm
	shfl.bfly.b32 %f105, %f106, %r73, %r70;
	// end inline asm
	add.f32 	%f108, %f106, %f105;
	// begin inline asm
	shfl.bfly.b32 %f107, %f108, %r74, %r70;
	// end inline asm
	add.f32 	%f33, %f108, %f107;
	// begin inline asm
	shfl.bfly.b32 %f109, %f167, %r69, %r70;
	// end inline asm
	add.f32 	%f112, %f167, %f109;
	// begin inline asm
	shfl.bfly.b32 %f111, %f112, %r71, %r70;
	// end inline asm
	add.f32 	%f114, %f112, %f111;
	// begin inline asm
	shfl.bfly.b32 %f113, %f114, %r72, %r70;
	// end inline asm
	add.f32 	%f116, %f114, %f113;
	// begin inline asm
	shfl.bfly.b32 %f115, %f116, %r73, %r70;
	// end inline asm
	add.f32 	%f118, %f116, %f115;
	// begin inline asm
	shfl.bfly.b32 %f117, %f118, %r74, %r70;
	// end inline asm
	add.f32 	%f34, %f118, %f117;
	@%p9 bra 	$L__BB1_24;

	mov.u32 	%r62, my_smem;
	add.s32 	%r63, %r62, 4;
	atom.shared.add.f32 	%f119, [%r63], %f33;
	add.s32 	%r64, %r62, 12;
	atom.shared.add.f32 	%f120, [%r64], %f34;

$L__BB1_24:
	bar.sync 	0;
	@%p4 bra 	$L__BB1_26;

	ld.param.f32 	%f153, [LayerNorm2FusedBackpropGPUKernel_param_2];
	ld.shared.f32 	%f121, [my_smem+4];
	fma.rn.f32 	%f122, %f1, %f121, %f153;
	rsqrt.approx.f32 	%f123, %f122;
	st.shared.f32 	[my_smem+4], %f123;
	ld.shared.v2.f32 	{%f124, %f125}, [my_smem+8];
	mul.f32 	%f128, %f123, %f124;
	st.shared.f32 	[my_smem+8], %f128;
	mul.f32 	%f129, %f123, %f125;
	mul.f32 	%f130, %f123, %f129;
	mul.f32 	%f131, %f123, %f130;
	mul.f32 	%f132, %f1, %f131;
	st.shared.f32 	[my_smem+12], %f132;

$L__BB1_26:
	bar.sync 	0;
	ld.shared.f32 	%f35, [my_smem+4];
	ld.shared.v2.f32 	{%f133, %f134}, [my_smem+8];
	cvt.u32.u64 	%r67, %rd8;
	setp.ge.s32 	%p15, %r67, %r10;
	or.pred  	%p16, %p10, %p15;
	@%p16 bra 	$L__BB1_28;

	mul.f32 	%f152, %f161, %f154;
	sub.f32 	%f135, %f160, %f24;
	mul.f32 	%f136, %f161, %f135;
	fma.rn.f32 	%f168, %f35, %f136, %f168;
	mul.f32 	%f137, %f134, %f135;
	mul.f32 	%f138, %f35, %f152;
	sub.f32 	%f139, %f138, %f137;
	sub.f32 	%f140, %f139, %f133;
	add.s64 	%rd34, %rd1, %rd27;
	st.global.f32 	[%rd34], %f140;

$L__BB1_28:
	setp.ge.s32 	%p17, %r7, %r10;
	or.pred  	%p19, %p11, %p17;
	@%p19 bra 	$L__BB1_30;

	mul.f32 	%f151, %f163, %f155;
	sub.f32 	%f141, %f162, %f24;
	mul.f32 	%f142, %f163, %f141;
	fma.rn.f32 	%f169, %f35, %f142, %f169;
	mul.f32 	%f143, %f134, %f141;
	mul.f32 	%f144, %f35, %f151;
	sub.f32 	%f145, %f144, %f143;
	sub.f32 	%f146, %f145, %f133;
	add.s64 	%rd36, %rd1, %rd31;
	st.global.f32 	[%rd36], %f146;

$L__BB1_30:
	mov.u32 	%r76, %nctaid.x;
	ld.param.u32 	%r75, [LayerNorm2FusedBackpropGPUKernel_param_9];
	bar.sync 	0;
	add.s32 	%r80, %r80, %r76;
	setp.lt.s32 	%p20, %r80, %r75;
	@%p20 bra 	$L__BB1_6;

$L__BB1_31:
	setp.ge.u32 	%p21, %r14, %r9;
	@%p21 bra 	$L__BB1_33;

	ld.param.u64 	%rd47, [LayerNorm2FusedBackpropGPUKernel_param_8];
	cvta.to.global.u64 	%rd46, %rd47;
	shl.b64 	%rd37, %rd4, 2;
	add.s64 	%rd38, %rd3, %rd37;
	atom.global.add.f32 	%f147, [%rd38], %f168;
	add.s64 	%rd39, %rd46, %rd37;
	atom.global.add.f32 	%f148, [%rd39], %f171;

$L__BB1_33:
	mov.u32 	%r78, %ntid.x;
	cvt.u64.u32 	%rd43, %r78;
	add.s32 	%r77, %r78, %r14;
	add.s64 	%rd14, %rd43, %rd4;
	setp.ge.u32 	%p22, %r77, %r9;
	@%p22 bra 	$L__BB1_35;

	ld.param.u64 	%rd45, [LayerNorm2FusedBackpropGPUKernel_param_8];
	cvta.to.global.u64 	%rd44, %rd45;
	shl.b64 	%rd40, %rd14, 2;
	add.s64 	%rd41, %rd3, %rd40;
	atom.global.add.f32 	%f149, [%rd41], %f169;
	add.s64 	%rd42, %rd44, %rd40;
	atom.global.add.f32 	%f150, [%rd42], %f170;

$L__BB1_35:
	ret;

}
	// .globl	LayerNorm3FusedBackpropGPUKernel
.visible .entry LayerNorm3FusedBackpropGPUKernel(
	.param .u32 LayerNorm3FusedBackpropGPUKernel_param_0,
	.param .u32 LayerNorm3FusedBackpropGPUKernel_param_1,
	.param .f32 LayerNorm3FusedBackpropGPUKernel_param_2,
	.param .u64 LayerNorm3FusedBackpropGPUKernel_param_3,
	.param .u64 LayerNorm3FusedBackpropGPUKernel_param_4,
	.param .u64 LayerNorm3FusedBackpropGPUKernel_param_5,
	.param .u64 LayerNorm3FusedBackpropGPUKernel_param_6,
	.param .u64 LayerNorm3FusedBackpropGPUKernel_param_7,
	.param .u64 LayerNorm3FusedBackpropGPUKernel_param_8,
	.param .u32 LayerNorm3FusedBackpropGPUKernel_param_9
)
{
	.reg .pred 	%p<34>;
	.reg .f32 	%f<225>;
	.reg .b32 	%r<92>;
	.reg .b64 	%rd<80>;


	ld.param.u32 	%r11, [LayerNorm3FusedBackpropGPUKernel_param_0];
	ld.param.u32 	%r12, [LayerNorm3FusedBackpropGPUKernel_param_1];
	ld.param.u64 	%rd21, [LayerNorm3FusedBackpropGPUKernel_param_3];
	ld.param.u64 	%rd22, [LayerNorm3FusedBackpropGPUKernel_param_4];
	ld.param.u64 	%rd25, [LayerNorm3FusedBackpropGPUKernel_param_5];
	ld.param.u64 	%rd23, [LayerNorm3FusedBackpropGPUKernel_param_6];
	ld.param.u32 	%r13, [LayerNorm3FusedBackpropGPUKernel_param_9];
	mov.u32 	%r14, %tid.x;
	cvt.u64.u32 	%rd2, %r14;
	mov.u32 	%r1, %ntid.x;
	mul.wide.u32 	%rd27, %r14, 4;
	add.s64 	%rd3, %rd25, %rd27;
	setp.ge.s32 	%p1, %r14, %r11;
	mov.f32 	%f219, 0f00000000;
	mov.f32 	%f195, %f219;
	@%p1 bra 	$L__BB2_2;

	// begin inline asm
	ld.global.nc.f32 %f195, [%rd3];
	// end inline asm

$L__BB2_2:
	mul.wide.u32 	%rd29, %r1, 4;
	add.s64 	%rd5, %rd3, %rd29;
	cvt.u32.u64 	%r15, %rd2;
	add.s32 	%r2, %r1, %r15;
	setp.ge.s32 	%p2, %r2, %r11;
	mov.f32 	%f196, %f219;
	@%p2 bra 	$L__BB2_4;

	// begin inline asm
	ld.global.nc.f32 %f196, [%rd5];
	// end inline asm

$L__BB2_4:
	shl.b32 	%r16, %r1, 1;
	mul.wide.u32 	%rd31, %r16, 4;
	add.s64 	%rd7, %rd3, %rd31;
	add.s32 	%r3, %r2, %r1;
	setp.ge.s32 	%p3, %r3, %r11;
	mov.f32 	%f197, %f219;
	@%p3 bra 	$L__BB2_6;

	// begin inline asm
	ld.global.nc.f32 %f197, [%rd7];
	// end inline asm

$L__BB2_6:
	mov.u32 	%r18, WARP_SZ;
	rem.u32 	%r4, %r15, %r18;
	cvta.to.global.u64 	%rd8, %rd23;
	cvt.rn.f32.s32 	%f77, %r11;
	rcp.rn.f32 	%f7, %f77;
	mov.u32 	%r91, %ctaid.x;
	setp.ge.s32 	%p4, %r91, %r13;
	mov.f32 	%f220, %f219;
	mov.f32 	%f221, %f219;
	mov.f32 	%f216, %f219;
	mov.f32 	%f217, %f219;
	mov.f32 	%f218, %f219;
	@%p4 bra 	$L__BB2_41;

	setp.ne.s32 	%p12, %r4, 0;
	setp.ge.u32 	%p14, %r2, %r11;
	mov.f32 	%f220, %f219;
	mov.f32 	%f221, %f219;
	mov.f32 	%f216, %f219;
	mov.f32 	%f217, %f219;
	mov.f32 	%f218, %f219;

$L__BB2_8:
	setp.ne.s32 	%p5, %r15, 0;
	@%p5 bra 	$L__BB2_10;

	mov.f32 	%f84, 0f00000000;
	st.shared.v4.f32 	[my_smem], {%f84, %f84, %f84, %f84};

$L__BB2_10:
	mov.u32 	%r87, %ntid.x;
	setp.ge.s32 	%p6, %r15, %r11;
	bar.sync 	0;
	mad.lo.s32 	%r21, %r91, %r11, %r15;
	add.s32 	%r8, %r21, %r87;
	add.s32 	%r9, %r8, %r87;
	mul.wide.s32 	%rd33, %r21, 4;
	add.s64 	%rd11, %rd21, %rd33;
	mov.f32 	%f209, 0f00000000;
	mov.f32 	%f204, %f209;
	@%p6 bra 	$L__BB2_12;

	// begin inline asm
	ld.global.nc.f32 %f204, [%rd11];
	// end inline asm

$L__BB2_12:
	mad.lo.s32 	%r88, %r91, %r11, %r15;
	cvt.s64.s32 	%rd76, %r88;
	shl.b64 	%rd35, %rd76, 2;
	add.s64 	%rd12, %rd22, %rd35;
	mov.f32 	%f205, %f209;
	@%p6 bra 	$L__BB2_14;

	// begin inline asm
	ld.global.nc.f32 %f205, [%rd12];
	// end inline asm

$L__BB2_14:
	cvt.s64.s32 	%rd13, %r8;
	mul.wide.s32 	%rd37, %r8, 4;
	add.s64 	%rd14, %rd21, %rd37;
	mov.f32 	%f206, %f209;
	@%p2 bra 	$L__BB2_16;

	// begin inline asm
	ld.global.nc.f32 %f206, [%rd14];
	// end inline asm

$L__BB2_16:
	shl.b64 	%rd39, %rd13, 2;
	add.s64 	%rd15, %rd22, %rd39;
	mov.f32 	%f207, %f209;
	@%p2 bra 	$L__BB2_18;

	// begin inline asm
	ld.global.nc.f32 %f207, [%rd15];
	// end inline asm

$L__BB2_18:
	cvt.s64.s32 	%rd16, %r9;
	mul.wide.s32 	%rd41, %r9, 4;
	add.s64 	%rd17, %rd21, %rd41;
	mov.f32 	%f208, %f209;
	@%p3 bra 	$L__BB2_20;

	// begin inline asm
	ld.global.nc.f32 %f208, [%rd17];
	// end inline asm

$L__BB2_20:
	shl.b64 	%rd43, %rd16, 2;
	add.s64 	%rd18, %rd22, %rd43;
	@%p3 bra 	$L__BB2_22;

	// begin inline asm
	ld.global.nc.f32 %f209, [%rd18];
	// end inline asm

$L__BB2_22:
	add.f32 	%f221, %f205, %f221;
	fma.rn.f32 	%f117, %f7, %f204, 0f00000000;
	mul.f32 	%f27, %f205, %f195;
	fma.rn.f32 	%f118, %f7, %f27, 0f00000000;
	add.f32 	%f220, %f207, %f220;
	fma.rn.f32 	%f119, %f7, %f206, %f117;
	mul.f32 	%f29, %f207, %f196;
	fma.rn.f32 	%f120, %f7, %f29, %f118;
	add.f32 	%f219, %f209, %f219;
	fma.rn.f32 	%f98, %f7, %f208, %f119;
	mul.f32 	%f31, %f209, %f197;
	fma.rn.f32 	%f108, %f7, %f31, %f120;
	mov.u32 	%r33, 16;
	mov.u32 	%r42, 31;
	// begin inline asm
	shfl.bfly.b32 %f97, %f98, %r33, %r42;
	// end inline asm
	add.f32 	%f100, %f98, %f97;
	mov.u32 	%r35, 8;
	// begin inline asm
	shfl.bfly.b32 %f99, %f100, %r35, %r42;
	// end inline asm
	add.f32 	%f102, %f100, %f99;
	mov.u32 	%r37, 4;
	// begin inline asm
	shfl.bfly.b32 %f101, %f102, %r37, %r42;
	// end inline asm
	add.f32 	%f104, %f102, %f101;
	mov.u32 	%r39, 2;
	// begin inline asm
	shfl.bfly.b32 %f103, %f104, %r39, %r42;
	// end inline asm
	add.f32 	%f106, %f104, %f103;
	mov.u32 	%r41, 1;
	// begin inline asm
	shfl.bfly.b32 %f105, %f106, %r41, %r42;
	// end inline asm
	add.f32 	%f32, %f106, %f105;
	// begin inline asm
	shfl.bfly.b32 %f107, %f108, %r33, %r42;
	// end inline asm
	add.f32 	%f110, %f108, %f107;
	// begin inline asm
	shfl.bfly.b32 %f109, %f110, %r35, %r42;
	// end inline asm
	add.f32 	%f112, %f110, %f109;
	// begin inline asm
	shfl.bfly.b32 %f111, %f112, %r37, %r42;
	// end inline asm
	add.f32 	%f114, %f112, %f111;
	// begin inline asm
	shfl.bfly.b32 %f113, %f114, %r39, %r42;
	// end inline asm
	add.f32 	%f116, %f114, %f113;
	// begin inline asm
	shfl.bfly.b32 %f115, %f116, %r41, %r42;
	// end inline asm
	add.f32 	%f33, %f116, %f115;
	@%p12 bra 	$L__BB2_24;

	mov.u32 	%r43, my_smem;
	atom.shared.add.f32 	%f121, [%r43], %f32;
	add.s32 	%r44, %r43, 8;
	atom.shared.add.f32 	%f122, [%r44], %f33;

$L__BB2_24:
	setp.ge.u32 	%p13, %r15, %r11;
	bar.sync 	0;
	mov.f32 	%f212, 0f00000000;
	ld.shared.f32 	%f34, [my_smem];
	mov.f32 	%f213, %f212;
	@%p13 bra 	$L__BB2_26;

	sub.f32 	%f125, %f204, %f34;
	fma.rn.f32 	%f212, %f125, %f125, 0f00000000;
	mul.f32 	%f126, %f125, %f205;
	fma.rn.f32 	%f213, %f126, %f195, 0f00000000;

$L__BB2_26:
	@%p14 bra 	$L__BB2_28;

	sub.f32 	%f127, %f206, %f34;
	fma.rn.f32 	%f212, %f127, %f127, %f212;
	mul.f32 	%f128, %f127, %f207;
	fma.rn.f32 	%f213, %f128, %f196, %f213;

$L__BB2_28:
	setp.ge.u32 	%p15, %r3, %r11;
	@%p15 bra 	$L__BB2_30;

	sub.f32 	%f129, %f208, %f34;
	fma.rn.f32 	%f212, %f129, %f129, %f212;
	mul.f32 	%f130, %f129, %f209;
	fma.rn.f32 	%f213, %f130, %f197, %f213;

$L__BB2_30:
	mov.u32 	%r78, 1;
	mov.u32 	%r77, 2;
	mov.u32 	%r76, 4;
	mov.u32 	%r75, 8;
	mov.u32 	%r74, 31;
	mov.u32 	%r73, 16;
	// begin inline asm
	shfl.bfly.b32 %f131, %f212, %r73, %r74;
	// end inline asm
	add.f32 	%f134, %f212, %f131;
	// begin inline asm
	shfl.bfly.b32 %f133, %f134, %r75, %r74;
	// end inline asm
	add.f32 	%f136, %f134, %f133;
	// begin inline asm
	shfl.bfly.b32 %f135, %f136, %r76, %r74;
	// end inline asm
	add.f32 	%f138, %f136, %f135;
	// begin inline asm
	shfl.bfly.b32 %f137, %f138, %r77, %r74;
	// end inline asm
	add.f32 	%f140, %f138, %f137;
	// begin inline asm
	shfl.bfly.b32 %f139, %f140, %r78, %r74;
	// end inline asm
	add.f32 	%f47, %f140, %f139;
	// begin inline asm
	shfl.bfly.b32 %f141, %f213, %r73, %r74;
	// end inline asm
	add.f32 	%f144, %f213, %f141;
	// begin inline asm
	shfl.bfly.b32 %f143, %f144, %r75, %r74;
	// end inline asm
	add.f32 	%f146, %f144, %f143;
	// begin inline asm
	shfl.bfly.b32 %f145, %f146, %r76, %r74;
	// end inline asm
	add.f32 	%f148, %f146, %f145;
	// begin inline asm
	shfl.bfly.b32 %f147, %f148, %r77, %r74;
	// end inline asm
	add.f32 	%f150, %f148, %f147;
	// begin inline asm
	shfl.bfly.b32 %f149, %f150, %r78, %r74;
	// end inline asm
	add.f32 	%f48, %f150, %f149;
	@%p12 bra 	$L__BB2_32;

	mov.u32 	%r66, my_smem;
	add.s32 	%r67, %r66, 4;
	atom.shared.add.f32 	%f151, [%r67], %f47;
	add.s32 	%r68, %r66, 12;
	atom.shared.add.f32 	%f152, [%r68], %f48;

$L__BB2_32:
	setp.ne.s32 	%p31, %r15, 0;
	bar.sync 	0;
	@%p31 bra 	$L__BB2_34;

	ld.param.f32 	%f194, [LayerNorm3FusedBackpropGPUKernel_param_2];
	ld.shared.f32 	%f153, [my_smem+4];
	fma.rn.f32 	%f154, %f7, %f153, %f194;
	rsqrt.approx.f32 	%f155, %f154;
	st.shared.f32 	[my_smem+4], %f155;
	ld.shared.v2.f32 	{%f156, %f157}, [my_smem+8];
	mul.f32 	%f160, %f155, %f156;
	st.shared.f32 	[my_smem+8], %f160;
	mul.f32 	%f161, %f155, %f157;
	mul.f32 	%f162, %f155, %f161;
	mul.f32 	%f163, %f155, %f162;
	mul.f32 	%f164, %f7, %f163;
	st.shared.f32 	[my_smem+12], %f164;

$L__BB2_34:
	setp.ge.u32 	%p32, %r15, %r11;
	mad.lo.s32 	%r90, %r91, %r11, %r15;
	cvt.s64.s32 	%rd79, %r90;
	bar.sync 	0;
	ld.shared.f32 	%f49, [my_smem+4];
	ld.shared.v2.f32 	{%f165, %f166}, [my_smem+8];
	cvt.u32.u64 	%r71, %rd79;
	setp.ge.s32 	%p19, %r71, %r12;
	or.pred  	%p20, %p32, %p19;
	@%p20 bra 	$L__BB2_36;

	mad.lo.s32 	%r89, %r91, %r11, %r15;
	cvt.s64.s32 	%rd78, %r89;
	shl.b64 	%rd77, %rd76, 2;
	mul.f32 	%f193, %f205, %f195;
	sub.f32 	%f167, %f204, %f34;
	mul.f32 	%f168, %f205, %f167;
	fma.rn.f32 	%f216, %f49, %f168, %f216;
	mul.f32 	%f169, %f166, %f167;
	mul.f32 	%f170, %f49, %f193;
	sub.f32 	%f171, %f170, %f169;
	sub.f32 	%f172, %f171, %f165;
	add.s64 	%rd46, %rd8, %rd77;
	st.global.f32 	[%rd46], %f172;

$L__BB2_36:
	setp.ge.s32 	%p21, %r8, %r12;
	or.pred  	%p23, %p14, %p21;
	@%p23 bra 	$L__BB2_38;

	mul.f32 	%f192, %f207, %f196;
	sub.f32 	%f173, %f206, %f34;
	mul.f32 	%f174, %f207, %f173;
	fma.rn.f32 	%f217, %f49, %f174, %f217;
	mul.f32 	%f175, %f166, %f173;
	mul.f32 	%f176, %f49, %f192;
	sub.f32 	%f177, %f176, %f175;
	sub.f32 	%f178, %f177, %f165;
	add.s64 	%rd48, %rd8, %rd39;
	st.global.f32 	[%rd48], %f178;

$L__BB2_38:
	setp.ge.u32 	%p33, %r3, %r11;
	setp.ge.s32 	%p24, %r9, %r12;
	or.pred  	%p26, %p33, %p24;
	@%p26 bra 	$L__BB2_40;

	mul.f32 	%f191, %f209, %f197;
	sub.f32 	%f179, %f208, %f34;
	mul.f32 	%f180, %f209, %f179;
	fma.rn.f32 	%f218, %f49, %f180, %f218;
	mul.f32 	%f181, %f166, %f179;
	mul.f32 	%f182, %f49, %f191;
	sub.f32 	%f183, %f182, %f181;
	sub.f32 	%f184, %f183, %f165;
	add.s64 	%rd50, %rd8, %rd43;
	st.global.f32 	[%rd50], %f184;

$L__BB2_40:
	mov.u32 	%r80, %nctaid.x;
	ld.param.u32 	%r79, [LayerNorm3FusedBackpropGPUKernel_param_9];
	bar.sync 	0;
	add.s32 	%r91, %r91, %r80;
	setp.lt.s32 	%p27, %r91, %r79;
	@%p27 bra 	$L__BB2_8;

$L__BB2_41:
	setp.ge.u32 	%p28, %r15, %r11;
	@%p28 bra 	$L__BB2_43;

	ld.param.u64 	%rd75, [LayerNorm3FusedBackpropGPUKernel_param_8];
	cvta.to.global.u64 	%rd74, %rd75;
	ld.param.u64 	%rd73, [LayerNorm3FusedBackpropGPUKernel_param_7];
	cvta.to.global.u64 	%rd72, %rd73;
	mov.u32 	%r86, %tid.x;
	cvt.u64.u32 	%rd71, %r86;
	shl.b64 	%rd51, %rd71, 2;
	add.s64 	%rd52, %rd72, %rd51;
	atom.global.add.f32 	%f185, [%rd52], %f216;
	add.s64 	%rd53, %rd74, %rd51;
	atom.global.add.f32 	%f186, [%rd53], %f221;

$L__BB2_43:
	mov.u32 	%r85, %tid.x;
	mov.u32 	%r84, %ntid.x;
	cvt.u64.u32 	%rd62, %r85;
	shl.b32 	%r83, %r84, 1;
	cvt.u64.u32 	%rd61, %r83;
	cvt.u64.u32 	%rd60, %r84;
	cvt.u32.u64 	%r82, %rd62;
	add.s32 	%r81, %r84, %r82;
	add.s64 	%rd19, %rd60, %rd62;
	add.s64 	%rd20, %rd61, %rd62;
	setp.ge.u32 	%p29, %r81, %r11;
	@%p29 bra 	$L__BB2_45;

	ld.param.u64 	%rd70, [LayerNorm3FusedBackpropGPUKernel_param_8];
	cvta.to.global.u64 	%rd69, %rd70;
	ld.param.u64 	%rd68, [LayerNorm3FusedBackpropGPUKernel_param_7];
	cvta.to.global.u64 	%rd67, %rd68;
	shl.b64 	%rd54, %rd19, 2;
	add.s64 	%rd55, %rd67, %rd54;
	atom.global.add.f32 	%f187, [%rd55], %f217;
	add.s64 	%rd56, %rd69, %rd54;
	atom.global.add.f32 	%f188, [%rd56], %f220;

$L__BB2_45:
	setp.ge.u32 	%p30, %r3, %r11;
	@%p30 bra 	$L__BB2_47;

	ld.param.u64 	%rd66, [LayerNorm3FusedBackpropGPUKernel_param_8];
	cvta.to.global.u64 	%rd65, %rd66;
	ld.param.u64 	%rd64, [LayerNorm3FusedBackpropGPUKernel_param_7];
	cvta.to.global.u64 	%rd63, %rd64;
	shl.b64 	%rd57, %rd20, 2;
	add.s64 	%rd58, %rd63, %rd57;
	atom.global.add.f32 	%f189, [%rd58], %f218;
	add.s64 	%rd59, %rd65, %rd57;
	atom.global.add.f32 	%f190, [%rd59], %f219;

$L__BB2_47:
	ret;

}
	// .globl	LayerNorm4FusedBackpropGPUKernel
.visible .entry LayerNorm4FusedBackpropGPUKernel(
	.param .u32 LayerNorm4FusedBackpropGPUKernel_param_0,
	.param .u32 LayerNorm4FusedBackpropGPUKernel_param_1,
	.param .f32 LayerNorm4FusedBackpropGPUKernel_param_2,
	.param .u64 LayerNorm4FusedBackpropGPUKernel_param_3,
	.param .u64 LayerNorm4FusedBackpropGPUKernel_param_4,
	.param .u64 LayerNorm4FusedBackpropGPUKernel_param_5,
	.param .u64 LayerNorm4FusedBackpropGPUKernel_param_6,
	.param .u64 LayerNorm4FusedBackpropGPUKernel_param_7,
	.param .u64 LayerNorm4FusedBackpropGPUKernel_param_8,
	.param .u32 LayerNorm4FusedBackpropGPUKernel_param_9
)
{
	.reg .pred 	%p<44>;
	.reg .f32 	%f<276>;
	.reg .b32 	%r<94>;
	.reg .b64 	%rd<86>;


	ld.param.u32 	%r13, [LayerNorm4FusedBackpropGPUKernel_param_0];
	ld.param.u32 	%r14, [LayerNorm4FusedBackpropGPUKernel_param_1];
	ld.param.u64 	%rd27, [LayerNorm4FusedBackpropGPUKernel_param_3];
	ld.param.u64 	%rd28, [LayerNorm4FusedBackpropGPUKernel_param_4];
	ld.param.u64 	%rd31, [LayerNorm4FusedBackpropGPUKernel_param_5];
	ld.param.u64 	%rd29, [LayerNorm4FusedBackpropGPUKernel_param_6];
	ld.param.u64 	%rd30, [LayerNorm4FusedBackpropGPUKernel_param_7];
	ld.param.u64 	%rd32, [LayerNorm4FusedBackpropGPUKernel_param_8];
	ld.param.u32 	%r15, [LayerNorm4FusedBackpropGPUKernel_param_9];
	cvta.to.global.u64 	%rd1, %rd32;
	mov.u32 	%r16, %tid.x;
	cvt.u64.u32 	%rd2, %r16;
	mov.u32 	%r1, %ntid.x;
	mul.wide.u32 	%rd33, %r16, 4;
	add.s64 	%rd3, %rd31, %rd33;
	setp.ge.s32 	%p1, %r16, %r13;
	mov.f32 	%f268, 0f00000000;
	mov.f32 	%f236, %f268;
	@%p1 bra 	$L__BB3_2;

	// begin inline asm
	ld.global.nc.f32 %f236, [%rd3];
	// end inline asm

$L__BB3_2:
	mul.wide.u32 	%rd35, %r1, 4;
	add.s64 	%rd5, %rd3, %rd35;
	cvt.u32.u64 	%r17, %rd2;
	add.s32 	%r2, %r1, %r17;
	setp.ge.s32 	%p2, %r2, %r13;
	mov.f32 	%f237, %f268;
	@%p2 bra 	$L__BB3_4;

	// begin inline asm
	ld.global.nc.f32 %f237, [%rd5];
	// end inline asm

$L__BB3_4:
	shl.b32 	%r18, %r1, 1;
	mul.wide.u32 	%rd37, %r18, 4;
	add.s64 	%rd7, %rd3, %rd37;
	add.s32 	%r3, %r2, %r1;
	setp.ge.s32 	%p3, %r3, %r13;
	mov.f32 	%f238, %f268;
	@%p3 bra 	$L__BB3_6;

	// begin inline asm
	ld.global.nc.f32 %f238, [%rd7];
	// end inline asm

$L__BB3_6:
	mul.lo.s32 	%r19, %r1, 3;
	mul.wide.u32 	%rd39, %r19, 4;
	add.s64 	%rd9, %rd3, %rd39;
	add.s32 	%r4, %r3, %r1;
	setp.ge.s32 	%p4, %r4, %r13;
	mov.f32 	%f239, %f268;
	@%p4 bra 	$L__BB3_8;

	// begin inline asm
	ld.global.nc.f32 %f239, [%rd9];
	// end inline asm

$L__BB3_8:
	mov.u32 	%r21, WARP_SZ;
	rem.u32 	%r5, %r17, %r21;
	cvta.to.global.u64 	%rd10, %rd29;
	cvta.to.global.u64 	%rd11, %rd30;
	cvt.rn.f32.s32 	%f99, %r13;
	rcp.rn.f32 	%f9, %f99;
	mov.u32 	%r93, %ctaid.x;
	setp.ge.s32 	%p5, %r93, %r15;
	mov.f32 	%f269, %f268;
	mov.f32 	%f270, %f268;
	mov.f32 	%f271, %f268;
	mov.f32 	%f264, %f268;
	mov.f32 	%f265, %f268;
	mov.f32 	%f266, %f268;
	mov.f32 	%f267, %f268;
	@%p5 bra 	$L__BB3_51;

	setp.ne.s32 	%p15, %r5, 0;
	mov.f32 	%f269, %f268;
	mov.f32 	%f270, %f268;
	mov.f32 	%f271, %f268;
	mov.f32 	%f264, %f268;
	mov.f32 	%f265, %f268;
	mov.f32 	%f266, %f268;
	mov.f32 	%f267, %f268;

$L__BB3_10:
	setp.ne.s32 	%p6, %r17, 0;
	@%p6 bra 	$L__BB3_12;

	mov.f32 	%f108, 0f00000000;
	st.shared.v4.f32 	[my_smem], {%f108, %f108, %f108, %f108};

$L__BB3_12:
	mov.u32 	%r89, %ntid.x;
	setp.ge.s32 	%p7, %r17, %r13;
	bar.sync 	0;
	mad.lo.s32 	%r24, %r93, %r13, %r17;
	add.s32 	%r9, %r24, %r89;
	add.s32 	%r10, %r9, %r89;
	add.s32 	%r11, %r10, %r89;
	mul.wide.s32 	%rd41, %r24, 4;
	add.s64 	%rd13, %rd27, %rd41;
	mov.f32 	%f255, 0f00000000;
	mov.f32 	%f248, %f255;
	@%p7 bra 	$L__BB3_14;

	// begin inline asm
	ld.global.nc.f32 %f248, [%rd13];
	// end inline asm

$L__BB3_14:
	mad.lo.s32 	%r90, %r93, %r13, %r17;
	cvt.s64.s32 	%rd82, %r90;
	shl.b64 	%rd43, %rd82, 2;
	add.s64 	%rd14, %rd28, %rd43;
	mov.f32 	%f249, %f255;
	@%p7 bra 	$L__BB3_16;

	// begin inline asm
	ld.global.nc.f32 %f249, [%rd14];
	// end inline asm

$L__BB3_16:
	cvt.s64.s32 	%rd15, %r9;
	mul.wide.s32 	%rd45, %r9, 4;
	add.s64 	%rd16, %rd27, %rd45;
	mov.f32 	%f250, %f255;
	@%p2 bra 	$L__BB3_18;

	// begin inline asm
	ld.global.nc.f32 %f250, [%rd16];
	// end inline asm

$L__BB3_18:
	shl.b64 	%rd47, %rd15, 2;
	add.s64 	%rd17, %rd28, %rd47;
	mov.f32 	%f251, %f255;
	@%p2 bra 	$L__BB3_20;

	// begin inline asm
	ld.global.nc.f32 %f251, [%rd17];
	// end inline asm

$L__BB3_20:
	cvt.s64.s32 	%rd18, %r10;
	mul.wide.s32 	%rd49, %r10, 4;
	add.s64 	%rd19, %rd27, %rd49;
	mov.f32 	%f252, %f255;
	@%p3 bra 	$L__BB3_22;

	// begin inline asm
	ld.global.nc.f32 %f252, [%rd19];
	// end inline asm

$L__BB3_22:
	shl.b64 	%rd51, %rd18, 2;
	add.s64 	%rd20, %rd28, %rd51;
	mov.f32 	%f253, %f255;
	@%p3 bra 	$L__BB3_24;

	// begin inline asm
	ld.global.nc.f32 %f253, [%rd20];
	// end inline asm

$L__BB3_24:
	cvt.s64.s32 	%rd21, %r11;
	mul.wide.s32 	%rd53, %r11, 4;
	add.s64 	%rd22, %rd27, %rd53;
	mov.f32 	%f254, %f255;
	@%p4 bra 	$L__BB3_26;

	// begin inline asm
	ld.global.nc.f32 %f254, [%rd22];
	// end inline asm

$L__BB3_26:
	shl.b64 	%rd55, %rd21, 2;
	add.s64 	%rd23, %rd28, %rd55;
	@%p4 bra 	$L__BB3_28;

	// begin inline asm
	ld.global.nc.f32 %f255, [%rd23];
	// end inline asm

$L__BB3_28:
	add.f32 	%f271, %f249, %f271;
	fma.rn.f32 	%f145, %f9, %f248, 0f00000000;
	mul.f32 	%f35, %f249, %f236;
	fma.rn.f32 	%f146, %f9, %f35, 0f00000000;
	add.f32 	%f270, %f251, %f270;
	fma.rn.f32 	%f147, %f9, %f250, %f145;
	mul.f32 	%f37, %f251, %f237;
	fma.rn.f32 	%f148, %f9, %f37, %f146;
	add.f32 	%f269, %f253, %f269;
	fma.rn.f32 	%f149, %f9, %f252, %f147;
	mul.f32 	%f39, %f253, %f238;
	fma.rn.f32 	%f150, %f9, %f39, %f148;
	add.f32 	%f268, %f255, %f268;
	fma.rn.f32 	%f126, %f9, %f254, %f149;
	mul.f32 	%f41, %f255, %f239;
	fma.rn.f32 	%f136, %f9, %f41, %f150;
	mov.u32 	%r36, 16;
	mov.u32 	%r45, 31;
	// begin inline asm
	shfl.bfly.b32 %f125, %f126, %r36, %r45;
	// end inline asm
	add.f32 	%f128, %f126, %f125;
	mov.u32 	%r38, 8;
	// begin inline asm
	shfl.bfly.b32 %f127, %f128, %r38, %r45;
	// end inline asm
	add.f32 	%f130, %f128, %f127;
	mov.u32 	%r40, 4;
	// begin inline asm
	shfl.bfly.b32 %f129, %f130, %r40, %r45;
	// end inline asm
	add.f32 	%f132, %f130, %f129;
	mov.u32 	%r42, 2;
	// begin inline asm
	shfl.bfly.b32 %f131, %f132, %r42, %r45;
	// end inline asm
	add.f32 	%f134, %f132, %f131;
	mov.u32 	%r44, 1;
	// begin inline asm
	shfl.bfly.b32 %f133, %f134, %r44, %r45;
	// end inline asm
	add.f32 	%f42, %f134, %f133;
	// begin inline asm
	shfl.bfly.b32 %f135, %f136, %r36, %r45;
	// end inline asm
	add.f32 	%f138, %f136, %f135;
	// begin inline asm
	shfl.bfly.b32 %f137, %f138, %r38, %r45;
	// end inline asm
	add.f32 	%f140, %f138, %f137;
	// begin inline asm
	shfl.bfly.b32 %f139, %f140, %r40, %r45;
	// end inline asm
	add.f32 	%f142, %f140, %f139;
	// begin inline asm
	shfl.bfly.b32 %f141, %f142, %r42, %r45;
	// end inline asm
	add.f32 	%f144, %f142, %f141;
	// begin inline asm
	shfl.bfly.b32 %f143, %f144, %r44, %r45;
	// end inline asm
	add.f32 	%f43, %f144, %f143;
	@%p15 bra 	$L__BB3_30;

	mov.u32 	%r46, my_smem;
	atom.shared.add.f32 	%f151, [%r46], %f42;
	add.s32 	%r47, %r46, 8;
	atom.shared.add.f32 	%f152, [%r47], %f43;

$L__BB3_30:
	setp.ge.u32 	%p16, %r17, %r13;
	bar.sync 	0;
	mov.f32 	%f258, 0f00000000;
	ld.shared.f32 	%f44, [my_smem];
	mov.f32 	%f259, %f258;
	@%p16 bra 	$L__BB3_32;

	sub.f32 	%f155, %f248, %f44;
	fma.rn.f32 	%f258, %f155, %f155, 0f00000000;
	mul.f32 	%f156, %f155, %f249;
	fma.rn.f32 	%f259, %f156, %f236, 0f00000000;

$L__BB3_32:
	setp.ge.u32 	%p17, %r2, %r13;
	@%p17 bra 	$L__BB3_34;

	sub.f32 	%f157, %f250, %f44;
	fma.rn.f32 	%f258, %f157, %f157, %f258;
	mul.f32 	%f158, %f157, %f251;
	fma.rn.f32 	%f259, %f158, %f237, %f259;

$L__BB3_34:
	setp.ge.u32 	%p18, %r3, %r13;
	@%p18 bra 	$L__BB3_36;

	sub.f32 	%f159, %f252, %f44;
	fma.rn.f32 	%f258, %f159, %f159, %f258;
	mul.f32 	%f160, %f159, %f253;
	fma.rn.f32 	%f259, %f160, %f238, %f259;

$L__BB3_36:
	setp.ge.u32 	%p19, %r4, %r13;
	@%p19 bra 	$L__BB3_38;

	sub.f32 	%f161, %f254, %f44;
	fma.rn.f32 	%f258, %f161, %f161, %f258;
	mul.f32 	%f162, %f161, %f255;
	fma.rn.f32 	%f259, %f162, %f239, %f259;

$L__BB3_38:
	mov.u32 	%r81, 1;
	mov.u32 	%r80, 2;
	mov.u32 	%r79, 4;
	mov.u32 	%r78, 8;
	mov.u32 	%r77, 31;
	mov.u32 	%r76, 16;
	// begin inline asm
	shfl.bfly.b32 %f163, %f258, %r76, %r77;
	// end inline asm
	add.f32 	%f166, %f258, %f163;
	// begin inline asm
	shfl.bfly.b32 %f165, %f166, %r78, %r77;
	// end inline asm
	add.f32 	%f168, %f166, %f165;
	// begin inline asm
	shfl.bfly.b32 %f167, %f168, %r79, %r77;
	// end inline asm
	add.f32 	%f170, %f168, %f167;
	// begin inline asm
	shfl.bfly.b32 %f169, %f170, %r80, %r77;
	// end inline asm
	add.f32 	%f172, %f170, %f169;
	// begin inline asm
	shfl.bfly.b32 %f171, %f172, %r81, %r77;
	// end inline asm
	add.f32 	%f61, %f172, %f171;
	// begin inline asm
	shfl.bfly.b32 %f173, %f259, %r76, %r77;
	// end inline asm
	add.f32 	%f176, %f259, %f173;
	// begin inline asm
	shfl.bfly.b32 %f175, %f176, %r78, %r77;
	// end inline asm
	add.f32 	%f178, %f176, %f175;
	// begin inline asm
	shfl.bfly.b32 %f177, %f178, %r79, %r77;
	// end inline asm
	add.f32 	%f180, %f178, %f177;
	// begin inline asm
	shfl.bfly.b32 %f179, %f180, %r80, %r77;
	// end inline asm
	add.f32 	%f182, %f180, %f179;
	// begin inline asm
	shfl.bfly.b32 %f181, %f182, %r81, %r77;
	// end inline asm
	add.f32 	%f62, %f182, %f181;
	@%p15 bra 	$L__BB3_40;

	mov.u32 	%r69, my_smem;
	add.s32 	%r70, %r69, 4;
	atom.shared.add.f32 	%f183, [%r70], %f61;
	add.s32 	%r71, %r69, 12;
	atom.shared.add.f32 	%f184, [%r71], %f62;

$L__BB3_40:
	setp.ne.s32 	%p39, %r17, 0;
	bar.sync 	0;
	@%p39 bra 	$L__BB3_42;

	ld.param.f32 	%f235, [LayerNorm4FusedBackpropGPUKernel_param_2];
	ld.shared.f32 	%f185, [my_smem+4];
	fma.rn.f32 	%f186, %f9, %f185, %f235;
	rsqrt.approx.f32 	%f187, %f186;
	st.shared.f32 	[my_smem+4], %f187;
	ld.shared.v2.f32 	{%f188, %f189}, [my_smem+8];
	mul.f32 	%f192, %f187, %f188;
	st.shared.f32 	[my_smem+8], %f192;
	mul.f32 	%f193, %f187, %f189;
	mul.f32 	%f194, %f187, %f193;
	mul.f32 	%f195, %f187, %f194;
	mul.f32 	%f196, %f9, %f195;
	st.shared.f32 	[my_smem+12], %f196;

$L__BB3_42:
	setp.ge.u32 	%p40, %r17, %r13;
	mad.lo.s32 	%r92, %r93, %r13, %r17;
	cvt.s64.s32 	%rd85, %r92;
	bar.sync 	0;
	ld.shared.f32 	%f63, [my_smem+4];
	ld.shared.v2.f32 	{%f197, %f198}, [my_smem+8];
	cvt.u32.u64 	%r74, %rd85;
	setp.ge.s32 	%p23, %r74, %r14;
	or.pred  	%p24, %p40, %p23;
	@%p24 bra 	$L__BB3_44;

	mad.lo.s32 	%r91, %r93, %r13, %r17;
	cvt.s64.s32 	%rd84, %r91;
	shl.b64 	%rd83, %rd82, 2;
	mul.f32 	%f234, %f249, %f236;
	sub.f32 	%f199, %f248, %f44;
	mul.f32 	%f200, %f249, %f199;
	fma.rn.f32 	%f264, %f63, %f200, %f264;
	mul.f32 	%f201, %f198, %f199;
	mul.f32 	%f202, %f63, %f234;
	sub.f32 	%f203, %f202, %f201;
	sub.f32 	%f204, %f203, %f197;
	add.s64 	%rd58, %rd10, %rd83;
	st.global.f32 	[%rd58], %f204;

$L__BB3_44:
	setp.ge.u32 	%p41, %r2, %r13;
	setp.ge.s32 	%p25, %r9, %r14;
	or.pred  	%p27, %p41, %p25;
	@%p27 bra 	$L__BB3_46;

	mul.f32 	%f233, %f251, %f237;
	sub.f32 	%f205, %f250, %f44;
	mul.f32 	%f206, %f251, %f205;
	fma.rn.f32 	%f265, %f63, %f206, %f265;
	mul.f32 	%f207, %f198, %f205;
	mul.f32 	%f208, %f63, %f233;
	sub.f32 	%f209, %f208, %f207;
	sub.f32 	%f210, %f209, %f197;
	add.s64 	%rd60, %rd10, %rd47;
	st.global.f32 	[%rd60], %f210;

$L__BB3_46:
	setp.ge.u32 	%p42, %r3, %r13;
	setp.ge.s32 	%p28, %r10, %r14;
	or.pred  	%p30, %p42, %p28;
	@%p30 bra 	$L__BB3_48;

	mul.f32 	%f232, %f253, %f238;
	sub.f32 	%f211, %f252, %f44;
	mul.f32 	%f212, %f253, %f211;
	fma.rn.f32 	%f266, %f63, %f212, %f266;
	mul.f32 	%f213, %f198, %f211;
	mul.f32 	%f214, %f63, %f232;
	sub.f32 	%f215, %f214, %f213;
	sub.f32 	%f216, %f215, %f197;
	add.s64 	%rd62, %rd10, %rd51;
	st.global.f32 	[%rd62], %f216;

$L__BB3_48:
	setp.ge.u32 	%p43, %r4, %r13;
	setp.ge.s32 	%p31, %r11, %r14;
	or.pred  	%p33, %p43, %p31;
	@%p33 bra 	$L__BB3_50;

	mul.f32 	%f231, %f255, %f239;
	sub.f32 	%f217, %f254, %f44;
	mul.f32 	%f218, %f255, %f217;
	fma.rn.f32 	%f267, %f63, %f218, %f267;
	mul.f32 	%f219, %f198, %f217;
	mul.f32 	%f220, %f63, %f231;
	sub.f32 	%f221, %f220, %f219;
	sub.f32 	%f222, %f221, %f197;
	add.s64 	%rd64, %rd10, %rd55;
	st.global.f32 	[%rd64], %f222;

$L__BB3_50:
	mov.u32 	%r83, %nctaid.x;
	ld.param.u32 	%r82, [LayerNorm4FusedBackpropGPUKernel_param_9];
	bar.sync 	0;
	add.s32 	%r93, %r93, %r83;
	setp.lt.s32 	%p34, %r93, %r82;
	@%p34 bra 	$L__BB3_10;

$L__BB3_51:
	setp.ge.u32 	%p35, %r17, %r13;
	@%p35 bra 	$L__BB3_53;

	mov.u32 	%r88, %tid.x;
	cvt.u64.u32 	%rd81, %r88;
	shl.b64 	%rd65, %rd81, 2;
	add.s64 	%rd66, %rd11, %rd65;
	atom.global.add.f32 	%f223, [%rd66], %f264;
	add.s64 	%rd67, %rd1, %rd65;
	atom.global.add.f32 	%f224, [%rd67], %f271;

$L__BB3_53:
	mov.u32 	%r87, %ntid.x;
	mul.lo.s32 	%r86, %r87, 3;
	cvt.u64.u32 	%rd80, %r86;
	shl.b32 	%r85, %r87, 1;
	cvt.u64.u32 	%rd79, %r85;
	cvt.u64.u32 	%rd78, %r87;
	mov.u32 	%r84, %tid.x;
	cvt.u64.u32 	%rd77, %r84;
	add.s64 	%rd24, %rd78, %rd77;
	add.s64 	%rd25, %rd79, %rd77;
	add.s64 	%rd26, %rd80, %rd77;
	setp.ge.u32 	%p36, %r2, %r13;
	@%p36 bra 	$L__BB3_55;

	shl.b64 	%rd68, %rd24, 2;
	add.s64 	%rd69, %rd11, %rd68;
	atom.global.add.f32 	%f225, [%rd69], %f265;
	add.s64 	%rd70, %rd1, %rd68;
	atom.global.add.f32 	%f226, [%rd70], %f270;

$L__BB3_55:
	setp.ge.u32 	%p37, %r3, %r13;
	@%p37 bra 	$L__BB3_57;

	shl.b64 	%rd71, %rd25, 2;
	add.s64 	%rd72, %rd11, %rd71;
	atom.global.add.f32 	%f227, [%rd72], %f266;
	add.s64 	%rd73, %rd1, %rd71;
	atom.global.add.f32 	%f228, [%rd73], %f269;

$L__BB3_57:
	setp.ge.u32 	%p38, %r4, %r13;
	@%p38 bra 	$L__BB3_59;

	shl.b64 	%rd74, %rd26, 2;
	add.s64 	%rd75, %rd11, %rd74;
	atom.global.add.f32 	%f229, [%rd75], %f267;
	add.s64 	%rd76, %rd1, %rd74;
	atom.global.add.f32 	%f230, [%rd76], %f268;

$L__BB3_59:
	ret;

}
	// .globl	LayerNorm5FusedBackpropGPUKernel
.visible .entry LayerNorm5FusedBackpropGPUKernel(
	.param .u32 LayerNorm5FusedBackpropGPUKernel_param_0,
	.param .u32 LayerNorm5FusedBackpropGPUKernel_param_1,
	.param .f32 LayerNorm5FusedBackpropGPUKernel_param_2,
	.param .u64 LayerNorm5FusedBackpropGPUKernel_param_3,
	.param .u64 LayerNorm5FusedBackpropGPUKernel_param_4,
	.param .u64 LayerNorm5FusedBackpropGPUKernel_param_5,
	.param .u64 LayerNorm5FusedBackpropGPUKernel_param_6,
	.param .u64 LayerNorm5FusedBackpropGPUKernel_param_7,
	.param .u64 LayerNorm5FusedBackpropGPUKernel_param_8,
	.param .u32 LayerNorm5FusedBackpropGPUKernel_param_9
)
{
	.reg .pred 	%p<54>;
	.reg .f32 	%f<327>;
	.reg .b32 	%r<97>;
	.reg .b64 	%rd<104>;


	ld.param.u32 	%r15, [LayerNorm5FusedBackpropGPUKernel_param_0];
	ld.param.u32 	%r16, [LayerNorm5FusedBackpropGPUKernel_param_1];
	ld.param.u64 	%rd33, [LayerNorm5FusedBackpropGPUKernel_param_3];
	ld.param.u64 	%rd34, [LayerNorm5FusedBackpropGPUKernel_param_4];
	ld.param.u64 	%rd37, [LayerNorm5FusedBackpropGPUKernel_param_5];
	ld.param.u64 	%rd35, [LayerNorm5FusedBackpropGPUKernel_param_6];
	ld.param.u64 	%rd36, [LayerNorm5FusedBackpropGPUKernel_param_7];
	ld.param.u64 	%rd38, [LayerNorm5FusedBackpropGPUKernel_param_8];
	ld.param.u32 	%r17, [LayerNorm5FusedBackpropGPUKernel_param_9];
	cvta.to.global.u64 	%rd1, %rd38;
	mov.u32 	%r18, %tid.x;
	cvt.u64.u32 	%rd2, %r18;
	mov.u32 	%r1, %ntid.x;
	mul.wide.u32 	%rd39, %r18, 4;
	add.s64 	%rd3, %rd37, %rd39;
	setp.ge.s32 	%p1, %r18, %r15;
	mov.f32 	%f317, 0f00000000;
	mov.f32 	%f277, %f317;
	@%p1 bra 	$L__BB4_2;

	// begin inline asm
	ld.global.nc.f32 %f277, [%rd3];
	// end inline asm

$L__BB4_2:
	mul.wide.u32 	%rd41, %r1, 4;
	add.s64 	%rd5, %rd3, %rd41;
	cvt.u32.u64 	%r19, %rd2;
	add.s32 	%r2, %r1, %r19;
	setp.ge.s32 	%p2, %r2, %r15;
	mov.f32 	%f278, %f317;
	@%p2 bra 	$L__BB4_4;

	// begin inline asm
	ld.global.nc.f32 %f278, [%rd5];
	// end inline asm

$L__BB4_4:
	shl.b32 	%r20, %r1, 1;
	mul.wide.u32 	%rd43, %r20, 4;
	add.s64 	%rd7, %rd3, %rd43;
	add.s32 	%r3, %r2, %r1;
	setp.ge.s32 	%p3, %r3, %r15;
	mov.f32 	%f279, %f317;
	@%p3 bra 	$L__BB4_6;

	// begin inline asm
	ld.global.nc.f32 %f279, [%rd7];
	// end inline asm

$L__BB4_6:
	mul.lo.s32 	%r21, %r1, 3;
	mul.wide.u32 	%rd45, %r21, 4;
	add.s64 	%rd9, %rd3, %rd45;
	add.s32 	%r4, %r3, %r1;
	setp.ge.s32 	%p4, %r4, %r15;
	mov.f32 	%f280, %f317;
	@%p4 bra 	$L__BB4_8;

	// begin inline asm
	ld.global.nc.f32 %f280, [%rd9];
	// end inline asm

$L__BB4_8:
	shl.b32 	%r22, %r1, 2;
	mul.wide.u32 	%rd47, %r22, 4;
	add.s64 	%rd11, %rd3, %rd47;
	add.s32 	%r5, %r4, %r1;
	setp.ge.s32 	%p5, %r5, %r15;
	mov.f32 	%f281, %f317;
	@%p5 bra 	$L__BB4_10;

	// begin inline asm
	ld.global.nc.f32 %f281, [%rd11];
	// end inline asm

$L__BB4_10:
	mov.u32 	%r24, WARP_SZ;
	rem.u32 	%r6, %r19, %r24;
	cvta.to.global.u64 	%rd12, %rd35;
	cvta.to.global.u64 	%rd13, %rd36;
	cvt.rn.f32.s32 	%f121, %r15;
	rcp.rn.f32 	%f11, %f121;
	mov.u32 	%r96, %ctaid.x;
	setp.ge.s32 	%p6, %r96, %r17;
	mov.f32 	%f318, %f317;
	mov.f32 	%f319, %f317;
	mov.f32 	%f320, %f317;
	mov.f32 	%f321, %f317;
	mov.f32 	%f312, %f317;
	mov.f32 	%f313, %f317;
	mov.f32 	%f314, %f317;
	mov.f32 	%f315, %f317;
	mov.f32 	%f316, %f317;
	@%p6 bra 	$L__BB4_61;

	mov.u32 	%r8, %nctaid.x;
	mov.f32 	%f318, %f317;
	mov.f32 	%f319, %f317;
	mov.f32 	%f320, %f317;
	mov.f32 	%f321, %f317;
	mov.f32 	%f312, %f317;
	mov.f32 	%f313, %f317;
	mov.f32 	%f314, %f317;
	mov.f32 	%f315, %f317;
	mov.f32 	%f316, %f317;

$L__BB4_12:
	setp.ne.s32 	%p7, %r19, 0;
	@%p7 bra 	$L__BB4_14;

	mov.f32 	%f132, 0f00000000;
	st.shared.v4.f32 	[my_smem], {%f132, %f132, %f132, %f132};

$L__BB4_14:
	mov.u32 	%r92, %ntid.x;
	setp.ge.s32 	%p8, %r19, %r15;
	bar.sync 	0;
	mad.lo.s32 	%r27, %r96, %r15, %r19;
	add.s32 	%r10, %r27, %r92;
	add.s32 	%r11, %r10, %r92;
	add.s32 	%r12, %r11, %r92;
	add.s32 	%r13, %r12, %r92;
	mul.wide.s32 	%rd49, %r27, 4;
	add.s64 	%rd15, %rd33, %rd49;
	mov.f32 	%f301, 0f00000000;
	mov.f32 	%f292, %f301;
	@%p8 bra 	$L__BB4_16;

	// begin inline asm
	ld.global.nc.f32 %f292, [%rd15];
	// end inline asm

$L__BB4_16:
	mad.lo.s32 	%r93, %r96, %r15, %r19;
	cvt.s64.s32 	%rd100, %r93;
	shl.b64 	%rd51, %rd100, 2;
	add.s64 	%rd16, %rd34, %rd51;
	mov.f32 	%f293, %f301;
	@%p8 bra 	$L__BB4_18;

	// begin inline asm
	ld.global.nc.f32 %f293, [%rd16];
	// end inline asm

$L__BB4_18:
	cvt.s64.s32 	%rd17, %r10;
	mul.wide.s32 	%rd53, %r10, 4;
	add.s64 	%rd18, %rd33, %rd53;
	mov.f32 	%f294, %f301;
	@%p2 bra 	$L__BB4_20;

	// begin inline asm
	ld.global.nc.f32 %f294, [%rd18];
	// end inline asm

$L__BB4_20:
	shl.b64 	%rd55, %rd17, 2;
	add.s64 	%rd19, %rd34, %rd55;
	mov.f32 	%f295, %f301;
	@%p2 bra 	$L__BB4_22;

	// begin inline asm
	ld.global.nc.f32 %f295, [%rd19];
	// end inline asm

$L__BB4_22:
	cvt.s64.s32 	%rd20, %r11;
	mul.wide.s32 	%rd57, %r11, 4;
	add.s64 	%rd21, %rd33, %rd57;
	mov.f32 	%f296, %f301;
	@%p3 bra 	$L__BB4_24;

	// begin inline asm
	ld.global.nc.f32 %f296, [%rd21];
	// end inline asm

$L__BB4_24:
	shl.b64 	%rd59, %rd20, 2;
	add.s64 	%rd22, %rd34, %rd59;
	mov.f32 	%f297, %f301;
	@%p3 bra 	$L__BB4_26;

	// begin inline asm
	ld.global.nc.f32 %f297, [%rd22];
	// end inline asm

$L__BB4_26:
	cvt.s64.s32 	%rd23, %r12;
	mul.wide.s32 	%rd61, %r12, 4;
	add.s64 	%rd24, %rd33, %rd61;
	mov.f32 	%f298, %f301;
	@%p4 bra 	$L__BB4_28;

	// begin inline asm
	ld.global.nc.f32 %f298, [%rd24];
	// end inline asm

$L__BB4_28:
	shl.b64 	%rd63, %rd23, 2;
	add.s64 	%rd25, %rd34, %rd63;
	mov.f32 	%f299, %f301;
	@%p4 bra 	$L__BB4_30;

	// begin inline asm
	ld.global.nc.f32 %f299, [%rd25];
	// end inline asm

$L__BB4_30:
	cvt.s64.s32 	%rd26, %r13;
	mul.wide.s32 	%rd65, %r13, 4;
	add.s64 	%rd27, %rd33, %rd65;
	mov.f32 	%f300, %f301;
	@%p5 bra 	$L__BB4_32;

	// begin inline asm
	ld.global.nc.f32 %f300, [%rd27];
	// end inline asm

$L__BB4_32:
	shl.b64 	%rd67, %rd26, 2;
	add.s64 	%rd28, %rd34, %rd67;
	@%p5 bra 	$L__BB4_34;

	// begin inline asm
	ld.global.nc.f32 %f301, [%rd28];
	// end inline asm

$L__BB4_34:
	add.f32 	%f321, %f293, %f321;
	fma.rn.f32 	%f173, %f11, %f292, 0f00000000;
	mul.f32 	%f43, %f293, %f277;
	fma.rn.f32 	%f174, %f11, %f43, 0f00000000;
	add.f32 	%f320, %f295, %f320;
	fma.rn.f32 	%f175, %f11, %f294, %f173;
	mul.f32 	%f45, %f295, %f278;
	fma.rn.f32 	%f176, %f11, %f45, %f174;
	add.f32 	%f319, %f297, %f319;
	fma.rn.f32 	%f177, %f11, %f296, %f175;
	mul.f32 	%f47, %f297, %f279;
	fma.rn.f32 	%f178, %f11, %f47, %f176;
	add.f32 	%f318, %f299, %f318;
	fma.rn.f32 	%f179, %f11, %f298, %f177;
	mul.f32 	%f49, %f299, %f280;
	fma.rn.f32 	%f180, %f11, %f49, %f178;
	add.f32 	%f317, %f301, %f317;
	fma.rn.f32 	%f154, %f11, %f300, %f179;
	mul.f32 	%f51, %f301, %f281;
	fma.rn.f32 	%f164, %f11, %f51, %f180;
	mov.u32 	%r39, 16;
	mov.u32 	%r48, 31;
	// begin inline asm
	shfl.bfly.b32 %f153, %f154, %r39, %r48;
	// end inline asm
	add.f32 	%f156, %f154, %f153;
	mov.u32 	%r41, 8;
	// begin inline asm
	shfl.bfly.b32 %f155, %f156, %r41, %r48;
	// end inline asm
	add.f32 	%f158, %f156, %f155;
	mov.u32 	%r43, 4;
	// begin inline asm
	shfl.bfly.b32 %f157, %f158, %r43, %r48;
	// end inline asm
	add.f32 	%f160, %f158, %f157;
	mov.u32 	%r45, 2;
	// begin inline asm
	shfl.bfly.b32 %f159, %f160, %r45, %r48;
	// end inline asm
	add.f32 	%f162, %f160, %f159;
	mov.u32 	%r47, 1;
	// begin inline asm
	shfl.bfly.b32 %f161, %f162, %r47, %r48;
	// end inline asm
	add.f32 	%f52, %f162, %f161;
	// begin inline asm
	shfl.bfly.b32 %f163, %f164, %r39, %r48;
	// end inline asm
	add.f32 	%f166, %f164, %f163;
	// begin inline asm
	shfl.bfly.b32 %f165, %f166, %r41, %r48;
	// end inline asm
	add.f32 	%f168, %f166, %f165;
	// begin inline asm
	shfl.bfly.b32 %f167, %f168, %r43, %r48;
	// end inline asm
	add.f32 	%f170, %f168, %f167;
	// begin inline asm
	shfl.bfly.b32 %f169, %f170, %r45, %r48;
	// end inline asm
	add.f32 	%f172, %f170, %f169;
	// begin inline asm
	shfl.bfly.b32 %f171, %f172, %r47, %r48;
	// end inline asm
	add.f32 	%f53, %f172, %f171;
	setp.ne.s32 	%p18, %r6, 0;
	@%p18 bra 	$L__BB4_36;

	mov.u32 	%r49, my_smem;
	atom.shared.add.f32 	%f181, [%r49], %f52;
	add.s32 	%r50, %r49, 8;
	atom.shared.add.f32 	%f182, [%r50], %f53;

$L__BB4_36:
	setp.ge.u32 	%p19, %r19, %r15;
	bar.sync 	0;
	mov.f32 	%f304, 0f00000000;
	ld.shared.f32 	%f54, [my_smem];
	mov.f32 	%f305, %f304;
	@%p19 bra 	$L__BB4_38;

	sub.f32 	%f185, %f292, %f54;
	fma.rn.f32 	%f304, %f185, %f185, 0f00000000;
	mul.f32 	%f186, %f185, %f293;
	fma.rn.f32 	%f305, %f186, %f277, 0f00000000;

$L__BB4_38:
	setp.ge.u32 	%p20, %r2, %r15;
	@%p20 bra 	$L__BB4_40;

	sub.f32 	%f187, %f294, %f54;
	fma.rn.f32 	%f304, %f187, %f187, %f304;
	mul.f32 	%f188, %f187, %f295;
	fma.rn.f32 	%f305, %f188, %f278, %f305;

$L__BB4_40:
	setp.ge.u32 	%p21, %r3, %r15;
	@%p21 bra 	$L__BB4_42;

	sub.f32 	%f189, %f296, %f54;
	fma.rn.f32 	%f304, %f189, %f189, %f304;
	mul.f32 	%f190, %f189, %f297;
	fma.rn.f32 	%f305, %f190, %f279, %f305;

$L__BB4_42:
	setp.ge.u32 	%p22, %r4, %r15;
	@%p22 bra 	$L__BB4_44;

	sub.f32 	%f191, %f298, %f54;
	fma.rn.f32 	%f304, %f191, %f191, %f304;
	mul.f32 	%f192, %f191, %f299;
	fma.rn.f32 	%f305, %f192, %f280, %f305;

$L__BB4_44:
	setp.ge.u32 	%p23, %r5, %r15;
	@%p23 bra 	$L__BB4_46;

	sub.f32 	%f193, %f300, %f54;
	fma.rn.f32 	%f304, %f193, %f193, %f304;
	mul.f32 	%f194, %f193, %f301;
	fma.rn.f32 	%f305, %f194, %f281, %f305;

$L__BB4_46:
	setp.ne.s32 	%p47, %r6, 0;
	mov.u32 	%r84, 1;
	mov.u32 	%r83, 2;
	mov.u32 	%r82, 4;
	mov.u32 	%r81, 8;
	mov.u32 	%r80, 31;
	mov.u32 	%r79, 16;
	// begin inline asm
	shfl.bfly.b32 %f195, %f304, %r79, %r80;
	// end inline asm
	add.f32 	%f198, %f304, %f195;
	// begin inline asm
	shfl.bfly.b32 %f197, %f198, %r81, %r80;
	// end inline asm
	add.f32 	%f200, %f198, %f197;
	// begin inline asm
	shfl.bfly.b32 %f199, %f200, %r82, %r80;
	// end inline asm
	add.f32 	%f202, %f200, %f199;
	// begin inline asm
	shfl.bfly.b32 %f201, %f202, %r83, %r80;
	// end inline asm
	add.f32 	%f204, %f202, %f201;
	// begin inline asm
	shfl.bfly.b32 %f203, %f204, %r84, %r80;
	// end inline asm
	add.f32 	%f75, %f204, %f203;
	// begin inline asm
	shfl.bfly.b32 %f205, %f305, %r79, %r80;
	// end inline asm
	add.f32 	%f208, %f305, %f205;
	// begin inline asm
	shfl.bfly.b32 %f207, %f208, %r81, %r80;
	// end inline asm
	add.f32 	%f210, %f208, %f207;
	// begin inline asm
	shfl.bfly.b32 %f209, %f210, %r82, %r80;
	// end inline asm
	add.f32 	%f212, %f210, %f209;
	// begin inline asm
	shfl.bfly.b32 %f211, %f212, %r83, %r80;
	// end inline asm
	add.f32 	%f214, %f212, %f211;
	// begin inline asm
	shfl.bfly.b32 %f213, %f214, %r84, %r80;
	// end inline asm
	add.f32 	%f76, %f214, %f213;
	@%p47 bra 	$L__BB4_48;

	mov.u32 	%r72, my_smem;
	add.s32 	%r73, %r72, 4;
	atom.shared.add.f32 	%f215, [%r73], %f75;
	add.s32 	%r74, %r72, 12;
	atom.shared.add.f32 	%f216, [%r74], %f76;

$L__BB4_48:
	setp.ne.s32 	%p48, %r19, 0;
	bar.sync 	0;
	@%p48 bra 	$L__BB4_50;

	ld.param.f32 	%f276, [LayerNorm5FusedBackpropGPUKernel_param_2];
	ld.shared.f32 	%f217, [my_smem+4];
	fma.rn.f32 	%f218, %f11, %f217, %f276;
	rsqrt.approx.f32 	%f219, %f218;
	st.shared.f32 	[my_smem+4], %f219;
	ld.shared.v2.f32 	{%f220, %f221}, [my_smem+8];
	mul.f32 	%f224, %f219, %f220;
	st.shared.f32 	[my_smem+8], %f224;
	mul.f32 	%f225, %f219, %f221;
	mul.f32 	%f226, %f219, %f225;
	mul.f32 	%f227, %f219, %f226;
	mul.f32 	%f228, %f11, %f227;
	st.shared.f32 	[my_smem+12], %f228;

$L__BB4_50:
	setp.ge.u32 	%p49, %r19, %r15;
	mad.lo.s32 	%r95, %r96, %r15, %r19;
	cvt.s64.s32 	%rd103, %r95;
	bar.sync 	0;
	ld.shared.f32 	%f77, [my_smem+4];
	ld.shared.v2.f32 	{%f229, %f230}, [my_smem+8];
	cvt.u32.u64 	%r77, %rd103;
	setp.ge.s32 	%p27, %r77, %r16;
	or.pred  	%p28, %p49, %p27;
	@%p28 bra 	$L__BB4_52;

	mad.lo.s32 	%r94, %r96, %r15, %r19;
	cvt.s64.s32 	%rd102, %r94;
	shl.b64 	%rd101, %rd100, 2;
	mul.f32 	%f275, %f293, %f277;
	sub.f32 	%f231, %f292, %f54;
	mul.f32 	%f232, %f293, %f231;
	fma.rn.f32 	%f312, %f77, %f232, %f312;
	mul.f32 	%f233, %f230, %f231;
	mul.f32 	%f234, %f77, %f275;
	sub.f32 	%f235, %f234, %f233;
	sub.f32 	%f236, %f235, %f229;
	add.s64 	%rd70, %rd12, %rd101;
	st.global.f32 	[%rd70], %f236;

$L__BB4_52:
	setp.ge.u32 	%p50, %r2, %r15;
	setp.ge.s32 	%p29, %r10, %r16;
	or.pred  	%p31, %p50, %p29;
	@%p31 bra 	$L__BB4_54;

	mul.f32 	%f274, %f295, %f278;
	sub.f32 	%f237, %f294, %f54;
	mul.f32 	%f238, %f295, %f237;
	fma.rn.f32 	%f313, %f77, %f238, %f313;
	mul.f32 	%f239, %f230, %f237;
	mul.f32 	%f240, %f77, %f274;
	sub.f32 	%f241, %f240, %f239;
	sub.f32 	%f242, %f241, %f229;
	add.s64 	%rd72, %rd12, %rd55;
	st.global.f32 	[%rd72], %f242;

$L__BB4_54:
	setp.ge.u32 	%p51, %r3, %r15;
	setp.ge.s32 	%p32, %r11, %r16;
	or.pred  	%p34, %p51, %p32;
	@%p34 bra 	$L__BB4_56;

	mul.f32 	%f273, %f297, %f279;
	sub.f32 	%f243, %f296, %f54;
	mul.f32 	%f244, %f297, %f243;
	fma.rn.f32 	%f314, %f77, %f244, %f314;
	mul.f32 	%f245, %f230, %f243;
	mul.f32 	%f246, %f77, %f273;
	sub.f32 	%f247, %f246, %f245;
	sub.f32 	%f248, %f247, %f229;
	add.s64 	%rd74, %rd12, %rd59;
	st.global.f32 	[%rd74], %f248;

$L__BB4_56:
	setp.ge.u32 	%p52, %r4, %r15;
	setp.ge.s32 	%p35, %r12, %r16;
	or.pred  	%p37, %p52, %p35;
	@%p37 bra 	$L__BB4_58;

	mul.f32 	%f272, %f299, %f280;
	sub.f32 	%f249, %f298, %f54;
	mul.f32 	%f250, %f299, %f249;
	fma.rn.f32 	%f315, %f77, %f250, %f315;
	mul.f32 	%f251, %f230, %f249;
	mul.f32 	%f252, %f77, %f272;
	sub.f32 	%f253, %f252, %f251;
	sub.f32 	%f254, %f253, %f229;
	add.s64 	%rd76, %rd12, %rd63;
	st.global.f32 	[%rd76], %f254;

$L__BB4_58:
	setp.ge.u32 	%p53, %r5, %r15;
	setp.ge.s32 	%p38, %r13, %r16;
	or.pred  	%p40, %p53, %p38;
	@%p40 bra 	$L__BB4_60;

	mul.f32 	%f271, %f301, %f281;
	sub.f32 	%f255, %f300, %f54;
	mul.f32 	%f256, %f301, %f255;
	fma.rn.f32 	%f316, %f77, %f256, %f316;
	mul.f32 	%f257, %f230, %f255;
	mul.f32 	%f258, %f77, %f271;
	sub.f32 	%f259, %f258, %f257;
	sub.f32 	%f260, %f259, %f229;
	add.s64 	%rd78, %rd12, %rd67;
	st.global.f32 	[%rd78], %f260;

$L__BB4_60:
	ld.param.u32 	%r85, [LayerNorm5FusedBackpropGPUKernel_param_9];
	bar.sync 	0;
	add.s32 	%r96, %r96, %r8;
	setp.lt.s32 	%p41, %r96, %r85;
	@%p41 bra 	$L__BB4_12;

$L__BB4_61:
	setp.ge.u32 	%p42, %r19, %r15;
	@%p42 bra 	$L__BB4_63;

	mov.u32 	%r91, %tid.x;
	cvt.u64.u32 	%rd99, %r91;
	shl.b64 	%rd79, %rd99, 2;
	add.s64 	%rd80, %rd13, %rd79;
	atom.global.add.f32 	%f261, [%rd80], %f312;
	add.s64 	%rd81, %rd1, %rd79;
	atom.global.add.f32 	%f262, [%rd81], %f321;

$L__BB4_63:
	mov.u32 	%r90, %ntid.x;
	shl.b32 	%r89, %r90, 2;
	cvt.u64.u32 	%rd98, %r89;
	mul.lo.s32 	%r88, %r90, 3;
	cvt.u64.u32 	%rd97, %r88;
	shl.b32 	%r87, %r90, 1;
	cvt.u64.u32 	%rd96, %r87;
	cvt.u64.u32 	%rd95, %r90;
	mov.u32 	%r86, %tid.x;
	cvt.u64.u32 	%rd94, %r86;
	add.s64 	%rd29, %rd95, %rd94;
	add.s64 	%rd30, %rd96, %rd94;
	add.s64 	%rd31, %rd97, %rd94;
	add.s64 	%rd32, %rd98, %rd94;
	setp.ge.u32 	%p43, %r2, %r15;
	@%p43 bra 	$L__BB4_65;

	shl.b64 	%rd82, %rd29, 2;
	add.s64 	%rd83, %rd13, %rd82;
	atom.global.add.f32 	%f263, [%rd83], %f313;
	add.s64 	%rd84, %rd1, %rd82;
	atom.global.add.f32 	%f264, [%rd84], %f320;

$L__BB4_65:
	setp.ge.u32 	%p44, %r3, %r15;
	@%p44 bra 	$L__BB4_67;

	shl.b64 	%rd85, %rd30, 2;
	add.s64 	%rd86, %rd13, %rd85;
	atom.global.add.f32 	%f265, [%rd86], %f314;
	add.s64 	%rd87, %rd1, %rd85;
	atom.global.add.f32 	%f266, [%rd87], %f319;

$L__BB4_67:
	setp.ge.u32 	%p45, %r4, %r15;
	@%p45 bra 	$L__BB4_69;

	shl.b64 	%rd88, %rd31, 2;
	add.s64 	%rd89, %rd13, %rd88;
	atom.global.add.f32 	%f267, [%rd89], %f315;
	add.s64 	%rd90, %rd1, %rd88;
	atom.global.add.f32 	%f268, [%rd90], %f318;

$L__BB4_69:
	setp.ge.u32 	%p46, %r5, %r15;
	@%p46 bra 	$L__BB4_71;

	shl.b64 	%rd91, %rd32, 2;
	add.s64 	%rd92, %rd13, %rd91;
	atom.global.add.f32 	%f269, [%rd92], %f316;
	add.s64 	%rd93, %rd1, %rd91;
	atom.global.add.f32 	%f270, [%rd93], %f317;

$L__BB4_71:
	ret;

}
	// .globl	LayerNormFusedSmallBackpropGPUKernel
.visible .entry LayerNormFusedSmallBackpropGPUKernel(
	.param .u32 LayerNormFusedSmallBackpropGPUKernel_param_0,
	.param .u32 LayerNormFusedSmallBackpropGPUKernel_param_1,
	.param .u32 LayerNormFusedSmallBackpropGPUKernel_param_2,
	.param .f32 LayerNormFusedSmallBackpropGPUKernel_param_3,
	.param .u64 LayerNormFusedSmallBackpropGPUKernel_param_4,
	.param .u64 LayerNormFusedSmallBackpropGPUKernel_param_5,
	.param .u64 LayerNormFusedSmallBackpropGPUKernel_param_6,
	.param .u64 LayerNormFusedSmallBackpropGPUKernel_param_7,
	.param .u64 LayerNormFusedSmallBackpropGPUKernel_param_8,
	.param .u64 LayerNormFusedSmallBackpropGPUKernel_param_9,
	.param .u32 LayerNormFusedSmallBackpropGPUKernel_param_10,
	.param .u32 LayerNormFusedSmallBackpropGPUKernel_param_11
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<103>;
	.reg .b32 	%r<60>;
	.reg .b64 	%rd<26>;


	ld.param.u32 	%r16, [LayerNormFusedSmallBackpropGPUKernel_param_0];
	ld.param.u32 	%r17, [LayerNormFusedSmallBackpropGPUKernel_param_1];
	ld.param.u32 	%r18, [LayerNormFusedSmallBackpropGPUKernel_param_2];
	ld.param.f32 	%f40, [LayerNormFusedSmallBackpropGPUKernel_param_3];
	ld.param.u64 	%rd7, [LayerNormFusedSmallBackpropGPUKernel_param_4];
	ld.param.u64 	%rd8, [LayerNormFusedSmallBackpropGPUKernel_param_5];
	ld.param.u64 	%rd9, [LayerNormFusedSmallBackpropGPUKernel_param_6];
	ld.param.u64 	%rd10, [LayerNormFusedSmallBackpropGPUKernel_param_7];
	ld.param.u64 	%rd11, [LayerNormFusedSmallBackpropGPUKernel_param_8];
	ld.param.u64 	%rd12, [LayerNormFusedSmallBackpropGPUKernel_param_9];
	ld.param.u32 	%r19, [LayerNormFusedSmallBackpropGPUKernel_param_10];
	ld.param.u32 	%r20, [LayerNormFusedSmallBackpropGPUKernel_param_11];
	mov.u32 	%r1, %tid.x;
	rem.u32 	%r2, %r1, %r16;
	mov.u32 	%r3, WARP_SZ;
	cvt.rn.f32.s32 	%f41, %r17;
	rcp.rn.f32 	%f1, %f41;
	shl.b32 	%r21, %r17, 2;
	mov.u32 	%r22, my_smem;
	add.s32 	%r4, %r22, %r21;
	setp.ge.u32 	%p1, %r1, %r17;
	@%p1 bra 	$L__BB5_2;

	shl.b32 	%r23, %r1, 2;
	add.s32 	%r25, %r22, %r23;
	mov.u32 	%r26, 0;
	st.shared.u32 	[%r25], %r26;
	add.s32 	%r27, %r4, %r23;
	st.shared.u32 	[%r27], %r26;

$L__BB5_2:
	cvt.s64.s32 	%rd1, %r2;
	mul.wide.s32 	%rd13, %r2, 4;
	add.s64 	%rd2, %rd9, %rd13;
	setp.ge.s32 	%p2, %r2, %r17;
	mov.f32 	%f42, 0f00000000;
	mov.f32 	%f83, %f42;
	@%p2 bra 	$L__BB5_4;

	// begin inline asm
	ld.global.nc.f32 %f83, [%rd2];
	// end inline asm

$L__BB5_4:
	bar.sync 	0;
	mov.u32 	%r56, %ctaid.x;
	setp.ge.s32 	%p3, %r56, %r19;
	mov.f32 	%f96, %f42;
	mov.f32 	%f102, %f42;
	@%p3 bra 	$L__BB5_19;

	mov.u32 	%r6, %nctaid.x;
	div.u32 	%r7, %r1, %r16;
	cvta.to.global.u64 	%rd3, %rd10;
	setp.lt.s32 	%p6, %r16, 2;
	setp.lt.s32 	%p8, %r2, %r17;
	mov.f32 	%f102, %f42;
	mov.f32 	%f96, %f42;

$L__BB5_6:
	mad.lo.s32 	%r28, %r56, %r20, %r7;
	mad.lo.s32 	%r29, %r28, %r17, %r2;
	cvt.s64.s32 	%rd4, %r29;
	mul.wide.s32 	%rd15, %r29, 4;
	add.s64 	%rd5, %rd7, %rd15;
	mov.f32 	%f86, %f42;
	@%p2 bra 	$L__BB5_8;

	// begin inline asm
	ld.global.nc.f32 %f86, [%rd5];
	// end inline asm

$L__BB5_8:
	shl.b64 	%rd17, %rd4, 2;
	add.s64 	%rd6, %rd8, %rd17;
	mov.f32 	%f87, %f42;
	@%p2 bra 	$L__BB5_10;

	// begin inline asm
	ld.global.nc.f32 %f87, [%rd6];
	// end inline asm

$L__BB5_10:
	add.f32 	%f102, %f102, %f87;
	fma.rn.f32 	%f90, %f1, %f86, 0f00000000;
	mul.f32 	%f12, %f83, %f87;
	fma.rn.f32 	%f91, %f1, %f12, 0f00000000;
	@%p6 bra 	$L__BB5_13;

	mov.u32 	%r57, %r16;

$L__BB5_12:
	shr.u32 	%r34, %r57, 31;
	add.s32 	%r35, %r57, %r34;
	shr.s32 	%r10, %r35, 1;
	mov.u32 	%r33, 31;
	// begin inline asm
	shfl.bfly.b32 %f52, %f90, %r10, %r33;
	// end inline asm
	add.f32 	%f90, %f90, %f52;
	// begin inline asm
	shfl.bfly.b32 %f54, %f91, %r10, %r33;
	// end inline asm
	add.f32 	%f91, %f91, %f54;
	setp.gt.s32 	%p7, %r57, 3;
	mov.u32 	%r57, %r10;
	@%p7 bra 	$L__BB5_12;

$L__BB5_13:
	sub.f32 	%f20, %f86, %f90;
	fma.rn.f32 	%f56, %f20, %f20, 0f00000000;
	fma.rn.f32 	%f57, %f12, %f20, 0f00000000;
	selp.f32 	%f94, %f56, 0f00000000, %p8;
	selp.f32 	%f95, %f57, 0f00000000, %p8;
	@%p6 bra 	$L__BB5_16;

	mov.u32 	%r58, %r16;

$L__BB5_15:
	shr.u32 	%r40, %r58, 31;
	add.s32 	%r41, %r58, %r40;
	shr.s32 	%r12, %r41, 1;
	mov.u32 	%r39, 31;
	// begin inline asm
	shfl.bfly.b32 %f58, %f94, %r12, %r39;
	// end inline asm
	add.f32 	%f94, %f94, %f58;
	// begin inline asm
	shfl.bfly.b32 %f60, %f95, %r12, %r39;
	// end inline asm
	add.f32 	%f95, %f95, %f60;
	setp.gt.s32 	%p10, %r58, 3;
	mov.u32 	%r58, %r12;
	@%p10 bra 	$L__BB5_15;

$L__BB5_16:
	fma.rn.f32 	%f29, %f1, %f94, %f40;
	cvt.u32.u64 	%r42, %rd4;
	setp.ge.s32 	%p11, %r42, %r18;
	or.pred  	%p13, %p2, %p11;
	@%p13 bra 	$L__BB5_18;

	rsqrt.approx.f32 	%f62, %f29;
	mul.f32 	%f63, %f87, %f20;
	fma.rn.f32 	%f96, %f63, %f62, %f96;
	mul.f32 	%f64, %f95, %f62;
	mul.f32 	%f65, %f62, %f64;
	mul.f32 	%f66, %f62, %f65;
	mul.f32 	%f67, %f1, %f66;
	mul.f32 	%f68, %f20, %f67;
	mul.f32 	%f69, %f12, %f62;
	sub.f32 	%f70, %f69, %f68;
	mul.f32 	%f71, %f91, %f62;
	sub.f32 	%f72, %f70, %f71;
	add.s64 	%rd20, %rd3, %rd17;
	st.global.f32 	[%rd20], %f72;

$L__BB5_18:
	add.s32 	%r56, %r56, %r6;
	setp.lt.s32 	%p14, %r56, %r19;
	@%p14 bra 	$L__BB5_6;

$L__BB5_19:
	setp.le.s32 	%p15, %r3, %r16;
	@%p15 bra 	$L__BB5_22;

	mov.u32 	%r46, 31;
	mov.u32 	%r59, %r16;

$L__BB5_21:
	// begin inline asm
	shfl.bfly.b32 %f73, %f96, %r59, %r46;
	// end inline asm
	add.f32 	%f96, %f96, %f73;
	// begin inline asm
	shfl.bfly.b32 %f75, %f102, %r59, %r46;
	// end inline asm
	add.f32 	%f102, %f102, %f75;
	shl.b32 	%r59, %r59, 1;
	setp.lt.s32 	%p16, %r59, %r3;
	@%p16 bra 	$L__BB5_21;

$L__BB5_22:
	rem.u32 	%r47, %r1, %r3;
	setp.ge.s32 	%p17, %r47, %r17;
	@%p17 bra 	$L__BB5_24;

	shl.b32 	%r48, %r2, 2;
	add.s32 	%r50, %r22, %r48;
	atom.shared.add.f32 	%f77, [%r50], %f96;
	add.s32 	%r51, %r4, %r48;
	atom.shared.add.f32 	%f78, [%r51], %f102;

$L__BB5_24:
	bar.sync 	0;
	setp.ge.u32 	%p19, %r1, %r16;
	or.pred  	%p20, %p19, %p2;
	@%p20 bra 	$L__BB5_26;

	shl.b32 	%r52, %r2, 2;
	add.s32 	%r54, %r22, %r52;
	ld.shared.f32 	%f79, [%r54];
	cvta.to.global.u64 	%rd21, %rd11;
	shl.b64 	%rd22, %rd1, 2;
	add.s64 	%rd23, %rd21, %rd22;
	atom.global.add.f32 	%f80, [%rd23], %f79;
	add.s32 	%r55, %r4, %r52;
	ld.shared.f32 	%f81, [%r55];
	cvta.to.global.u64 	%rd24, %rd12;
	add.s64 	%rd25, %rd24, %rd22;
	atom.global.add.f32 	%f82, [%rd25], %f81;

$L__BB5_26:
	ret;

}

